{"version":3,"file":"cachefactory.es2015.js","sources":["../node_modules/yabh/src/index.js","../src/defaults.js","../src/utils.js","../src/Cache.js","../src/CacheFactory.js","../src/index.js"],"sourcesContent":["/**\n * @method bubbleUp\n * @param {array} heap The heap.\n * @param {function} weightFunc The weight function.\n * @param {number} n The index of the element to bubble up.\n */\nconst bubbleUp = function (heap, weightFunc, n) {\n  const element = heap[n]\n  const weight = weightFunc(element)\n  // When at 0, an element can not go up any further.\n  while (n > 0) {\n    // Compute the parent element's index, and fetch it.\n    let parentN = Math.floor((n + 1) / 2) - 1\n    let parent = heap[parentN]\n    // If the parent has a lesser weight, things are in order and we\n    // are done.\n    if (weight >= weightFunc(parent)) {\n      break\n    } else {\n      heap[parentN] = element\n      heap[n] = parent\n      n = parentN\n    }\n  }\n}\n\n/**\n * @method bubbleDown\n * @param {array} heap The heap.\n * @param {function} weightFunc The weight function.\n * @param {number} n The index of the element to sink down.\n */\nconst bubbleDown = function (heap, weightFunc, n) {\n  var length = heap.length\n  let node = heap[n]\n  let nodeWeight = weightFunc(node)\n\n  while (true) {\n    let child2N = (n + 1) * 2\n    let child1N = child2N - 1\n    let swap = null;\n    if (child1N < length) {\n      let child1 = heap[child1N]\n      let child1Weight = weightFunc(child1)\n      // If the score is less than our node's, we need to swap.\n      if (child1Weight < nodeWeight) {\n        swap = child1N\n      }\n    }\n    // Do the same checks for the other child.\n    if (child2N < length) {\n      let child2 = heap[child2N]\n      let child2Weight = weightFunc(child2)\n      if (child2Weight < (swap === null ? nodeWeight : weightFunc(heap[child1N]))) {\n        swap = child2N\n      }\n    }\n\n    if (swap === null) {\n      break\n    } else {\n      heap[n] = heap[swap]\n      heap[swap] = node\n      n = swap\n    }\n  }\n}\n\nfunction BinaryHeap (weightFunc, compareFunc) {\n  if (!weightFunc) {\n    weightFunc = function (x) { return x }\n  }\n  if (!compareFunc) {\n    compareFunc = function (x, y) { return x === y }\n  }\n  if (typeof weightFunc !== 'function') {\n    throw new Error('BinaryHeap([weightFunc][, compareFunc]): \"weightFunc\" must be a function!')\n  }\n  if (typeof compareFunc !== 'function') {\n    throw new Error('BinaryHeap([weightFunc][, compareFunc]): \"compareFunc\" must be a function!')\n  }\n  this.weightFunc = weightFunc\n  this.compareFunc = compareFunc\n  this.heap = []\n}\n\nlet BHProto = BinaryHeap.prototype\n\nBHProto.push = function (node) {\n  this.heap.push(node)\n  bubbleUp(this.heap, this.weightFunc, this.heap.length - 1)\n}\n\nBHProto.peek = function () {\n  return this.heap[0]\n}\n\nBHProto.pop = function () {\n  let front = this.heap[0]\n  let end = this.heap.pop()\n  if (this.heap.length > 0) {\n    this.heap[0] = end\n    bubbleDown(this.heap, this.weightFunc, 0)\n  }\n  return front\n}\n\nBHProto.remove = function (node) {\n  var length = this.heap.length\n  for (let i = 0; i < length; i++) {\n    if (this.compareFunc(this.heap[i], node)) {\n      let removed = this.heap[i]\n      let end = this.heap.pop()\n      if (i !== length - 1) {\n        this.heap[i] = end\n        bubbleUp(this.heap, this.weightFunc, i)\n        bubbleDown(this.heap, this.weightFunc, i)\n      }\n      return removed\n    }\n  }\n  return null\n}\n\nBHProto.removeAll = function () {\n  this.heap = []\n}\n\nBHProto.size = function () {\n  return this.heap.length\n}\n\nexport default BinaryHeap\n","export default {\n  capacity: Number.MAX_VALUE,\n  cacheFlushInterval: null,\n  deleteOnExpire: 'none',\n  enabled: true,\n  onExpire: null,\n  maxAge: Number.MAX_VALUE,\n  recycleFreq: 1000,\n  storageMode: 'memory',\n  storageImpl: null,\n  storagePrefix: 'cachefactory.caches.',\n  storeOnReject: false,\n  storeOnResolve: false\n}\n","let _Promise = null\ntry {\n  _Promise = window.Promise\n} catch (e) {}\n\n/**\n * Utility methods used by CacheFactory.\n *\n * @example\n * import { utils } from 'cachefactory'\n * console.log(utils.isString('foo')) // true\n *\n * @namespace utils\n * @type {object}\n */\nconst utils = {\n  /**\n   * Returns whether the two values are strictly equal.\n   *\n   * @example\n   * import { utils } from 'cachefactory'\n   *\n   * console.log(utils.equals(4, 4) // true\n   * console.log(utils.equals(4, '4') // false\n   *\n   * @method utils.equals\n   * @param {*} a The first value.\n   * @param {*} a The second value.\n   * @returns {booleal} Whether the two values are strictly equal.\n   */\n  equals (a, b) {\n    return a === b\n  },\n\n  /**\n   * Proxy for `JSON.parse`.\n   *\n   * @example\n   * import { utils } from 'cachefactory'\n   *\n   * const a = utils.fromJson('{\"name\":\"John\"}')\n   * console.log(a) // { name: 'John' }\n   *\n   * @method utils.fromJson\n   * @param {string} json JSON to parse.\n   * @returns {object} The parsed object.\n   * @see utils.toJson\n   */\n  fromJson (value) {\n    return JSON.parse(value)\n  },\n\n  /**\n   * Returns whether the provided value is a function.\n   *\n   * @example\n   * import { utils } from 'cachefactory'\n   * const a = function (){ console.log('foo bar')}\n   * const b = { foo: \"bar\" }\n   * console.log(utils.isFunction(a)) // true\n   * console.log(utils.isFunction(b)) // false\n   *\n   * @method utils.isFunction\n   * @param {*} value The value to test.\n   * @returns {boolean} Whether the provided value is a function.\n   */\n  isFunction (value) {\n    return typeof value === 'function'\n  },\n\n  /**\n   * Returns whether the provided value is a number.\n   *\n   * @example\n   * import { utils } from 'js-data'\n   * const a = 1\n   * const b = -1.25\n   * const c = '1'\n   * console.log(utils.isNumber(a)) // true\n   * console.log(utils.isNumber(b)) // true\n   * console.log(utils.isNumber(c)) // false\n   *\n   * @method utils.isNumber\n   * @param {*} value The value to test.\n   * @returns {boolean} Whether the provided value is a number.\n   */\n  isNumber (value) {\n    return typeof value === 'number'\n  },\n\n  /**\n   * Returns whether the provided value is an object.\n   *\n   * @example\n   * import { utils } from 'cachefactory'\n   * const a = { foo: \"bar\" }\n   * const b = 'foo bar'\n   * console.log(utils.isObject(a)) // true\n   * console.log(utils.isObject(b)) // false\n   *\n   * @method utils.isObject\n   * @param {*} value The value to test.\n   * @returns {boolean} Whether the provided value is an object.\n   */\n  isObject (value) {\n    return value !== null && typeof value === 'object'\n  },\n\n  isPromise (value) {\n    return value && utils.isFunction(value.then)\n  },\n\n  /**\n   * Returns whether the provided value is a string.\n   *\n   * @example\n   * import { utils } from 'cachefactory'\n   * console.log(utils.isString('')) // true\n   * console.log(utils.isString('my string')) // true\n   * console.log(utils.isString(100)) // false\n   * console.log(utils.isString([1,2,4])) // false\n   *\n   * @method utils.isString\n   * @param {*} value The value to test.\n   * @returns {boolean} Whether the provided value is a string.\n   */\n  isString (value) {\n    return typeof value === 'string'\n  },\n\n  /**\n   * Proxy for `JSON.stringify`.\n   *\n   * @example\n   * import { utils } from 'cachefactory'\n   *\n   * const a = { name: 'John' }\n   * console.log(utils.toJson(a)) // '{\"name\":\"John\"}'\n   *\n   * @method utils.toJson\n   * @param {*} value Value to serialize to JSON.\n   * @returns {string} JSON string.\n   * @see utils.fromJson\n   */\n  toJson (value) {\n    return JSON.stringify(value)\n  },\n\n  Promise: _Promise\n}\n\nexport default utils\n","import BinaryHeap from '../node_modules/yabh/src/index'\nimport defaults from './defaults'\nimport utils from './utils'\n\nconst assignMsg = `Cannot assign to read only property`\n\n/**\n * Provide a custom storage medium, e.g. a polyfill for `localStorage`. Default: `null`.\n *\n * Must implement:\n *\n * - `setItem` - Same API as `localStorage.setItem(key, value)`\n * - `getItem` - Same API as `localStorage.getItem(key)`\n * - `removeItem` - Same API as `localStorage.removeItem(key)`\n *\n * @name Cache~StorageImpl\n * @type {object}\n * @property {function} setItem Implementation of `setItem(key, value)`.\n * @property {function} getItem Implementation of `getItem(key)`.\n * @property {function} removeItem Implementation of `removeItem(key)`.\n */\n\n/**\n * Instances of this class represent a \"cache\"â€”a synchronous key-value store.\n * Each instance holds the settings for the cache, and provides methods for\n * manipulating the cache and its data.\n *\n * Generally you don't creates instances of `Cache` directly, but instead create\n * instances of `Cache` via {@link CacheFactory#createCache}.\n *\n * @example\n * import CacheFactory from 'cachefactory';\n *\n * const cacheFactory = new CacheFactory();\n * const options = {...};\n * const cache = cacheFactory.createCache('my-cache', options);\n *\n * cache.put('foo', 'bar');\n * console.log(cache.get('foo')); // \"bar\"\n *\n * @class Cache\n * @param {string} id A unique identifier for the cache.\n * @param {object} [options] Configuration options.\n * @param {number} [options.cacheFlushInterval=null] See {@link Cache#cacheFlushInterval}.\n * @param {number} [options.capacity=Number.MAX_VALUE] See {@link Cache#capacity}.\n * @param {string} [options.deleteOnExpire=\"none\"] See {@link Cache#deleteOnExpire}.\n * @param {boolean} [options.enabled=true] See {@link Cache#enabled}.\n * @param {number} [options.maxAge=Number.MAX_VALUE] See {@link Cache#maxAge}.\n * @param {function} [options.onExpire=null] See {@link Cache#onExpire}.\n * @param {number} [options.recycleFreq=1000] See {@link Cache#recycleFreq}.\n * @param {Cache~StorageImpl} [options.storageImpl=null] See {@link Cache~StorageImpl}.\n * @param {string} [options.storageMode=\"memory\"] See {@link Cache#storageMode}.\n * @param {string} [options.storagePrefix=\"cachefactory.caches.\"] See {@link Cache#storagePrefix}.\n * @param {boolean} [options.storeOnReject=false] See {@link Cache#storeOnReject}.\n * @param {boolean} [options.storeOnResolve=false] See {@link Cache#storeOnResolve}.\n */\nexport default class Cache {\n  constructor (id, options = {}) {\n    if (!utils.isString(id)) {\n      throw new TypeError(`\"id\" must be a string!`)\n    }\n\n    Object.defineProperties(this, {\n      // Writable\n      $$cacheFlushInterval: { writable: true, value: undefined },\n      $$cacheFlushIntervalId: { writable: true, value: undefined },\n      $$capacity: { writable: true, value: undefined },\n      $$data: { writable: true, value: {} },\n      $$deleteOnExpire: { writable: true, value: undefined },\n      $$enabled: { writable: true, value: undefined },\n      $$expiresHeap: { writable: true, value: new BinaryHeap((x) => x.accessed, utils.equals) },\n      $$initializing: { writable: true, value: true },\n      $$lruHeap: { writable: true, value: new BinaryHeap((x) => x.accessed, utils.equals) },\n      $$maxAge: { writable: true, value: undefined },\n      $$onExpire: { writable: true, value: undefined },\n      $$prefix: { writable: true, value: '' },\n      $$promises: { writable: true, value: {} },\n      $$recycleFreq: { writable: true, value: undefined },\n      $$recycleFreqId: { writable: true, value: undefined },\n      $$storage: { writable: true, value: undefined },\n      $$storageMode: { writable: true, value: undefined },\n      $$storagePrefix: { writable: true, value: undefined },\n      $$storeOnReject: { writable: true, value: undefined },\n      $$storeOnResolve: { writable: true, value: undefined },\n\n      // Read-only\n      $$parent: { value: options.parent },\n\n      /**\n       * The interval (in milliseconds) on which the cache should remove all of\n       * its items. Setting this to `null` disables the interval. The default is\n       * `null`.\n       *\n       * @example <caption>Create a cache the clears itself every 15 minutes</caption>\n       * import CacheFactory from 'cachefactory';\n       *\n       * const cacheFactory = new CacheFactory();\n       * const cache = cacheFactory.createCache('my-cache', {\n       *   cacheFlushInterval: 15 * 60 * 1000\n       * });\n       *\n       * @name Cache#cacheFlushInterval\n       * @default null\n       * @public\n       * @readonly\n       * @type {number|null}\n       */\n      cacheFlushInterval: {\n        enumerable: true,\n        get: () => this.$$cacheFlushInterval,\n        set: () => { throw new Error(`${assignMsg} 'cacheFlushInterval'`) }\n      },\n\n      /**\n       * The maximum number of items that can be stored in the cache. When the\n       * capacity is exceeded the least recently accessed item will be removed.\n       * The default is `Number.MAX_VALUE`.\n       *\n       * @example <caption>Create a cache with a capacity of 100</caption>\n       * import CacheFactory from 'cachefactory';\n       *\n       * const cacheFactory = new CacheFactory();\n       * const cache = cacheFactory.createCache('my-cache', {\n       *   capacity: 100\n       * });\n       *\n       * @name Cache#capacity\n       * @default Number.MAX_VALUE\n       * @public\n       * @readonly\n       * @type {number}\n       */\n      capacity: {\n        enumerable: true,\n        get: () => this.$$capacity,\n        set: () => { throw new Error(`${assignMsg} 'capacity'`) }\n      },\n\n      /**\n       * Determines the behavior of a cache when an item expires. The default is\n       * `\"none\"`.\n       *\n       * Possible values:\n       *\n       * - `\"none\"` - Cache will do nothing when an item expires.\n       * - `\"passive\"` - Cache will do nothing when an item expires. Expired\n       * items will remain in the cache until requested, at which point they are\n       * removed, and `undefined` is returned.\n       * - `\"aggressive\"` - Cache will remove expired items as soon as they are\n       * discovered.\n       *\n       * @example <caption>Create a cache that deletes items as soon as they expire</caption>\n       * import CacheFactory from 'cachefactory';\n       *\n       * const cacheFactory = new CacheFactory();\n       * const cache = cacheFactory.createCache('my-cache', {\n       *   deleteOnExpire: 'aggressive'\n       * });\n       *\n       * @example <caption>Create a cache that doesn't delete expired items until they're accessed</caption>\n       * import CacheFactory from 'cachefactory';\n       *\n       * const cacheFactory = new CacheFactory();\n       * const cache = cacheFactory.createCache('my-cache', {\n       *   deleteOnExpire: 'passive'\n       * });\n       *\n       * @name Cache#deleteOnExpire\n       * @default \"none\"\n       * @public\n       * @readonly\n       * @type {string}\n       */\n      deleteOnExpire: {\n        enumerable: true,\n        get: () => this.$$deleteOnExpire,\n        set: () => { throw new Error(`${assignMsg} 'deleteOnExpire'`) }\n      },\n\n      /**\n       * Marks whether the cache is enabled or not. For a disabled cache,\n       * {@link Cache#put} is a no-op. The default is `true`.\n       *\n       * @example <caption>Create a cache that starts out disabled</caption>\n       * import CacheFactory from 'cachefactory';\n       *\n       * const cacheFactory = new CacheFactory();\n       * const cache = cacheFactory.createCache('my-cache', {\n       *   enabled: false\n       * });\n       *\n       * // The cache is disabled, this is a no-op\n       * cache.put('foo', 'bar');\n       * console.log(cache.get('foo')); // undefined\n       *\n       * @name Cache#enabled\n       * @default true\n       * @public\n       * @readonly\n       * @type {boolean}\n       */\n      enabled: {\n        enumerable: true,\n        get: () => this.$$enabled,\n        set: () => { throw new Error(`${assignMsg} 'enabled'`) }\n      },\n\n      /**\n       * Then unique identifier given to this cache when it was created.\n       *\n       * @name Cache#id\n       * @public\n       * @readonly\n       * @type {string}\n       */\n      id: {\n        enumerable: true,\n        value: id\n      },\n\n      /**\n       * Represents how long an item can be in the cache before expires. The\n       * cache's behavior toward expired items is determined by\n       * {@link Cache#deleteOnExpire}. The default value for `maxAge` is\n       * `Number.MAX_VALUE`.\n       *\n       * @example <caption>Create a cache where items expire after 15 minutes</caption>\n       * import CacheFactory from 'cachefactory';\n       *\n       * const cacheFactory = new CacheFactory();\n       * const cache = cacheFactory.createCache('my-cache', {\n       *   // Items expire after 15 minutes\n       *   maxAge: 15 * 60 * 1000\n       * });\n       * const cache2 = cacheFactory.createCache('my-cache2', {\n       *   // Items expire after 15 minutes\n       *   maxAge: 15 * 60 * 1000,\n       *   // Expired items will only be deleted once they are accessed\n       *   deleteOnExpire: 'passive'\n       * });\n       * const cache3 = cacheFactory.createCache('my-cache3', {\n       *   // Items expire after 15 minutes\n       *   maxAge: 15 * 60 * 1000,\n       *   // Items will be deleted from the cache as soon as they expire\n       *   deleteOnExpire: 'aggressive'\n       * });\n       *\n       * @name Cache#maxAge\n       * @default Number.MAX_VALUE\n       * @public\n       * @readonly\n       * @type {number}\n       */\n      maxAge: {\n        enumerable: true,\n        get: () => this.$$maxAge,\n        set: () => { throw new Error(`${assignMsg} 'maxAge'`) }\n      },\n\n      /**\n       * The `onExpire` callback.\n       *\n       * @callback Cache~onExpireCallback\n       * @param {string} key The key of the expired item.\n       * @param {*} value The value of the expired item.\n       * @param {function} [done] If in `\"passive\"` mode and you pass an\n       * `onExpire` callback to {@link Cache#get}, then the `onExpire` callback\n       * you passed to {@link Cache#get} will be passed to your global\n       * `onExpire` callback.\n       */\n\n      /**\n       * A callback to be executed when expired items are removed from the\n       * cache when the cache is in `\"passive\"` or `\"aggressive\"` mode. The\n       * default is `null`. See {@link Cache~onExpireCallback} for the signature\n       * of the `onExpire` callback.\n       *\n       * @example <caption>Create a cache where items expire after 15 minutes</caption>\n       * import CacheFactory from 'cachefactory';\n       *\n       * const cacheFactory = new CacheFactory();\n       * const cache = cacheFactory.createCache('my-cache', {\n       *   // Items expire after 15 minutes\n       *   maxAge: 15 * 60 * 1000,\n       *   // Expired items will only be deleted once they are accessed\n       *   deleteOnExpire: 'passive',\n       *   // Try to rehydrate cached items as they expire\n       *   onExpire: function (key, value, done) {\n       *     // Do something with key and value\n       *\n       *     // Will received \"done\" callback if in \"passive\" mode and passing\n       *     // an onExpire option to Cache#get.\n       *     if (done) {\n       *       done(); // You can pass whatever you want to done\n       *     }\n       *   }\n       * });\n       *\n       * @name Cache#onExpire\n       * @default null\n       * @public\n       * @readonly\n       * @see Cache~onExpireCallback\n       * @type {function}\n       */\n      onExpire: {\n        enumerable: true,\n        get: () => this.$$onExpire,\n        set: () => { throw new Error(`${assignMsg} 'onExpire'`) }\n      },\n\n      /**\n       * The frequency (in milliseconds) with which the cache should check for\n       * expired items. The default is `1000`. The value of this interval only\n       * matters if {@link Cache#deleteOnExpire} is set to `\"aggressive\"`.\n       *\n       * @example <caption>Create a cache where items expire after 15 minutes checking every 10 seconds</caption>\n       * import CacheFactory from 'cachefactory';\n       *\n       * const cacheFactory = new CacheFactory();\n       * const cache = cacheFactory.createCache('my-cache', {\n       *   // Items expire after 15 minutes\n       *   maxAge: 15 * 60 * 1000,\n       *   // Items will be deleted from the cache as soon as they expire\n       *   deleteOnExpire: 'aggressive',\n       *   // Check for expired items every 10 seconds\n       *   recycleFreq: 10 * 1000\n       * });\n       *\n       * @name Cache#recycleFreq\n       * @default 1000\n       * @public\n       * @readonly\n       * @type {number|null}\n       */\n      recycleFreq: {\n        enumerable: true,\n        get: () => this.$$recycleFreq,\n        set: () => { throw new Error(`${assignMsg} 'recycleFreq'`) }\n      },\n\n      /**\n       * Determines the storage medium used by the cache. The default is\n       * `\"memory\"`.\n       *\n       * Possible values:\n       *\n       * - `\"memory\"`\n       * - `\"localStorage\"`\n       * - `\"sessionStorage\"`\n       *\n       * @example <caption>Create a cache that stores its data in localStorage</caption>\n       * import CacheFactory from 'cachefactory';\n       *\n       * const cacheFactory = new CacheFactory();\n       * const cache = cacheFactory.createCache('my-cache', {\n       *   storageMode: 'localStorage'\n       * });\n       *\n       * @example <caption>Provide a custom storage implementation</caption>\n       * import CacheFactory from 'cachefactory';\n       *\n       * const cacheFactory = new CacheFactory();\n       * const cache = cacheFactory.createCache('my-cache', {\n       *   storageMode: 'localStorage',\n       *   storageImpl: {\n       *     setItem: function (key, value) {\n       *       console.log('setItem', key, value);\n       *       localStorage.setItem(key, value);\n       *     },\n       *     getItem: function (key) {\n       *       console.log('getItem', key);\n       *       localStorage.getItem(key);\n       *     },\n       *     removeItem: function (key) {\n       *       console.log('removeItem', key);\n       *       localStorage.removeItem(key);\n       *     }\n       *   }\n       * });\n       *\n       * @name Cache#storageMode\n       * @default \"memory\"\n       * @public\n       * @readonly\n       * @type {string}\n       */\n      storageMode: {\n        enumerable: true,\n        get: () => this.$$storageMode,\n        set: () => { throw new Error(`${assignMsg} 'storageMode'`) }\n      },\n\n      /**\n       * The prefix used to namespace the keys for items stored in\n       * `localStorage` or `sessionStorage`. The default is\n       * `\"cachefactory.caches.\"` which is conservatively long in order any\n       * possible conflict with other data in storage. Set to a shorter value\n       * to save storage space.\n       *\n       * @example\n       * import CacheFactory from 'cachefactory';\n       *\n       * const cacheFactory = new CacheFactory();\n       * const cache = cacheFactory.createCache('my-cache', {\n       *   storageMode: 'localStorage',\n       *   // Completely remove the prefix to save the most space\n       *   storagePrefix: ''\n       * });\n       * cache.put('foo', 'bar');\n       * console.log(localStorage.get('my-cache.data.foo')); // \"bar\"\n       *\n       * @name Cache#storagePrefix\n       * @default \"cachefactory.caches.\"\n       * @public\n       * @readonly\n       * @type {string}\n       */\n      storagePrefix: {\n        enumerable: true,\n        get: () => this.$$storagePrefix,\n        set: () => { throw new Error(`${assignMsg} 'storagePrefix'`) }\n      },\n\n      /**\n       * If set to `true`, when a promise is inserted into the cache and is then\n       * rejected, then the rejection value will overwrite the promise in the\n       * cache. The default is `false`.\n       *\n       * @name Cache#storeOnReject\n       * @default false\n       * @public\n       * @readonly\n       * @type {boolean}\n       */\n      storeOnReject: {\n        enumerable: true,\n        get: () => this.$$storeOnReject,\n        set: () => { throw new Error(`${assignMsg} 'storeOnReject'`) }\n      },\n\n      /**\n       * If set to `true`, when a promise is inserted into the cache and is then\n       * resolved, then the resolution value will overwrite the promise in the\n       * cache. The default is `false`.\n       *\n       * @name Cache#storeOnResolve\n       * @default false\n       * @public\n       * @readonly\n       * @type {boolean}\n       */\n      storeOnResolve: {\n        enumerable: true,\n        get: () => this.$$storeOnResolve,\n        set: () => { throw new Error(`${assignMsg} 'storeOnResolve'`) }\n      }\n    })\n\n    this.setOptions(options, true)\n    this.$$initializing = false\n  }\n\n  /**\n   * Destroys this cache and all its data and renders it unusable.\n   *\n   * @example\n   * cache.destroy();\n   *\n   * @method Cache#destroy\n   */\n  destroy () {\n    clearInterval(this.$$cacheFlushIntervalId)\n    clearInterval(this.$$recycleFreqId)\n    this.removeAll()\n    if (this.$$storage) {\n      this.$$storage().removeItem(`${this.$$prefix}.keys`)\n      this.$$storage().removeItem(this.$$prefix)\n    }\n    this.$$storage = null\n    this.$$data = null\n    this.$$lruHeap = null\n    this.$$expiresHeap = null\n    this.$$prefix = null\n    if (this.$$parent) {\n      this.$$parent.caches[this.id] = undefined\n    }\n  }\n\n  /**\n   * Disables this cache. For a disabled cache, {@link Cache#put} is a no-op.\n   *\n   * @example\n   * cache.disable();\n   *\n   * @method Cache#disable\n   */\n  disable () {\n    this.$$enabled = false\n  }\n\n  /**\n   * Enables this cache. For a disabled cache, {@link Cache#put} is a no-op.\n   *\n   * @example\n   * cache.enable();\n   *\n   * @method Cache#enable\n   */\n  enable () {\n    this.$$enabled = true\n  }\n\n  /**\n   * Retrieve an item from the cache, it it exists.\n   *\n   * @example <caption>Retrieve an item from the cache</caption>\n   * cache.put('foo', 'bar');\n   * cache.get('foo'); // \"bar\"\n   *\n   * @example <caption>Retrieve a possibly expired item while in passive mode</caption>\n   * import CacheFactory from 'cachefactory';\n   *\n   * const cacheFactory = new CacheFactory();\n   * const cache = cacheFactory.createCache('my-cache', {\n   *   deleteOnExpire: 'passive',\n   *   maxAge: 15 * 60 * 1000\n   * });\n   * cache.get('foo', {\n   *   // Called if \"foo\" is expired\n   *   onExpire: function (key, value) {\n   *     // Do something with key and value\n   *   }\n   * });\n   *\n   * @example <caption>Retrieve a possibly expired item while in passive mode with global onExpire callback</caption>\n   * import CacheFactory from 'cachefactory';\n   *\n   * const cacheFactory = new CacheFactory();\n   * const cache = cacheFactory.createCache('my-cache', {\n   *   deleteOnExpire: 'passive',\n   *   maxAge: 15 * 60 * 1000\n   *   onExpire: function (key, value, done) {\n   *     console.log('Expired item:', key);\n   *     if (done) {\n   *       done('foo', key, value);\n   *     }\n   *   }\n   * });\n   * cache.get('foo', {\n   *   // Called if \"foo\" is expired\n   *   onExpire: function (msg, key, value) {\n   *     console.log(msg); // \"foo\"\n   *     // Do something with key and value\n   *   }\n   * });\n   *\n   * @method Cache#get\n   * @param {string|string[]} key The key of the item to retrieve.\n   * @param {object} [options] Configuration options.\n   * @param {function} [options.onExpire] TODO\n   * @returns {*} The value for the specified `key`, if any.\n   */\n  get (key, options = {}) {\n    if (Array.isArray(key)) {\n      const keys = key\n      const values = []\n\n      keys.forEach((key) => {\n        const value = this.get(key, options)\n        if (value !== null && value !== undefined) {\n          values.push(value)\n        }\n      })\n\n      return values\n    } else {\n      if (utils.isNumber(key)) {\n        key = '' + key\n      }\n\n      if (!this.enabled) {\n        return\n      }\n    }\n\n    if (!utils.isString(key)) {\n      throw new TypeError(`\"key\" must be a string!`)\n    } else if (!options || !utils.isObject(options)) {\n      throw new TypeError(`\"options\" must be an object!`)\n    } else if (options.onExpire && !utils.isFunction(options.onExpire)) {\n      throw new TypeError(`\"options.onExpire\" must be a function!`)\n    }\n\n    let item\n\n    if (this.$$storage) {\n      if (this.$$promises[key]) {\n        return this.$$promises[key]\n      }\n\n      const itemJson = this.$$storage().getItem(`${this.$$prefix}.data.${key}`)\n\n      if (itemJson) {\n        item = utils.fromJson(itemJson)\n      }\n    } else if (utils.isObject(this.$$data)) {\n      item = this.$$data[key]\n    }\n\n    if (!item) {\n      return\n    }\n\n    let value = item.value\n    let now = new Date().getTime()\n\n    if (this.$$storage) {\n      this.$$lruHeap.remove({\n        key: key,\n        accessed: item.accessed\n      })\n      item.accessed = now\n      this.$$lruHeap.push({\n        key: key,\n        accessed: now\n      })\n    } else {\n      this.$$lruHeap.remove(item)\n      item.accessed = now\n      this.$$lruHeap.push(item)\n    }\n\n    if (this.$$deleteOnExpire === 'passive' && 'expires' in item && item.expires < now) {\n      this.remove(key)\n\n      if (this.$$onExpire) {\n        this.$$onExpire(key, item.value, options.onExpire)\n      } else if (options.onExpire) {\n        options.onExpire.call(this, key, item.value)\n      }\n      value = undefined\n    } else if (this.$$storage) {\n      this.$$storage().setItem(`${this.$$prefix}.data.${key}`, utils.toJson(item))\n    }\n\n    return value\n  }\n\n  /**\n   * Retrieve information about the whole cache or about a particular item in\n   * the cache.\n   *\n   * @example <caption>Retrieve info about the cache</caption>\n   * const info = cache.info();\n   * info.id; // \"my-cache\"\n   * info.capacity; // 100\n   * info.maxAge; // 600000\n   * info.deleteOnExpire; // \"aggressive\"\n   * info.cacheFlushInterval; // null\n   * info.recycleFreq; // 10000\n   * info.storageMode; // \"localStorage\"\n   * info.enabled; // false\n   * info.size; // 1234\n   *\n   * @example <caption>Retrieve info about an item in the cache</caption>\n   * const info = cache.info('foo');\n   * info.created; // 1234567890\n   * info.accessed; // 1234567990\n   * info.expires; // 1234569999\n   * info.isExpired; // false\n   *\n   * @method Cache#info\n   * @param {string} [key] If specified, retrieve info for a particular item in\n   * the cache.\n   * @returns {*} The information object.\n   */\n  info (key) {\n    if (key) {\n      let item\n      if (this.$$storage) {\n        const itemJson = this.$$storage().getItem(`${this.$$prefix}.data.${key}`)\n        if (itemJson) {\n          item = utils.fromJson(itemJson)\n        }\n      } else if (utils.isObject(this.$$data)) {\n        item = this.$$data[key]\n      }\n      if (item) {\n        return {\n          created: item.created,\n          accessed: item.accessed,\n          expires: item.expires,\n          isExpired: (new Date().getTime() - item.created) > (item.maxAge || this.$$maxAge)\n        }\n      }\n    } else {\n      return {\n        id: this.id,\n        capacity: this.capacity,\n        maxAge: this.maxAge,\n        deleteOnExpire: this.deleteOnExpire,\n        onExpire: this.onExpire,\n        cacheFlushInterval: this.cacheFlushInterval,\n        recycleFreq: this.recycleFreq,\n        storageMode: this.storageMode,\n        storageImpl: this.$$storage ? this.$$storage() : undefined,\n        enabled: this.enabled,\n        size: this.$$lruHeap && this.$$lruHeap.size() || 0\n      }\n    }\n  }\n\n  /**\n   * Retrieve a list of the keys of items currently in the cache.\n   *\n   * @example\n   * const keys = cache.keys();\n   *\n   * @method Cache#keys\n   * @returns {string[]} The keys of the items in the cache\n   */\n  keys () {\n    if (this.$$storage) {\n      const keysJson = this.$$storage().getItem(`${this.$$prefix}.keys`)\n\n      if (keysJson) {\n        return utils.fromJson(keysJson)\n      } else {\n        return []\n      }\n    } else {\n      return Object.keys(this.$$data).filter((key) => this.$$data[key])\n    }\n  }\n\n  /**\n   * Retrieve an object of the keys of items currently in the cache.\n   *\n   * @example\n   * const keySet = cache.keySet();\n   *\n   * @method Cache#keySet\n   * @returns {object} The keys of the items in the cache.\n   */\n  keySet () {\n    const set = {}\n    this.keys().forEach((key) => {\n      set[key] = key\n    })\n    return set\n  }\n\n  /**\n   * Insert an item into the cache.\n   *\n   * @example\n   * const inserted = cache.put('foo', 'bar');\n   *\n   * @method Cache#put\n   * @param {string} key The key under which to insert the item.\n   * @param {*} value The value to insert.\n   * @param {object} [options] Configuration options.\n   * @param {boolean} [options.storeOnReject] See {@link Cache#storeOnReject}.\n   * @param {boolean} [options.storeOnResolve] See {@link Cache#storeOnResolve}.\n   * @returns {*} The inserted value.\n   */\n  put (key, value, options = {}) {\n    const storeOnResolve = options.storeOnResolve !== undefined ? !!options.storeOnResolve : this.$$storeOnResolve\n    const storeOnReject = options.storeOnReject !== undefined ? !!options.storeOnReject : this.$$storeOnReject\n\n    const getHandler = (shouldStore, isError) => {\n      return (v) => {\n        if (shouldStore) {\n          this.$$promises[key] = undefined\n          if (utils.isObject(v) && 'status' in v && 'data' in v) {\n            v = [v.status, v.data, v.headers(), v.statusText]\n            this.put(key, v)\n          } else {\n            this.put(key, v)\n          }\n        }\n        if (isError) {\n          if (utils.Promise) {\n            return utils.Promise.reject(v)\n          } else {\n            throw v\n          }\n        } else {\n          return v\n        }\n      }\n    }\n\n    if (!this.$$enabled || !utils.isObject(this.$$data) || value === null || value === undefined) {\n      return\n    }\n    if (utils.isNumber(key)) {\n      key = '' + key\n    }\n\n    if (!utils.isString(key)) {\n      throw new TypeError(`\"key\" must be a string!`)\n    }\n\n    const now = new Date().getTime()\n    const item = {\n      key: key,\n      value: utils.isPromise(value) ? value.then(getHandler(storeOnResolve, false), getHandler(storeOnReject, true)) : value,\n      created: options.created === undefined ? now : options.created,\n      accessed: options.accessed === undefined ? now : options.accessed\n    }\n    if (utils.isNumber(options.maxAge)) {\n      item.maxAge = options.maxAge\n    }\n\n    if (options.expires === undefined) {\n      item.expires = item.created + (item.maxAge || this.$$maxAge)\n    } else {\n      item.expires = options.expires\n    }\n\n    if (this.$$storage) {\n      if (utils.isPromise(item.value)) {\n        this.$$promises[key] = item.value\n        return this.$$promises[key]\n      }\n      const keysJson = this.$$storage().getItem(`${this.$$prefix}.keys`)\n      const keys = keysJson ? utils.fromJson(keysJson) : []\n      const itemJson = this.$$storage().getItem(`${this.$$prefix}.data.${key}`)\n\n      // Remove existing\n      if (itemJson) {\n        this.remove(key)\n      }\n      // Add to expires heap\n      this.$$expiresHeap.push({\n        key: key,\n        expires: item.expires\n      })\n      // Add to lru heap\n      this.$$lruHeap.push({\n        key: key,\n        accessed: item.accessed\n      })\n      // Set item\n      this.$$storage().setItem(`${this.$$prefix}.data.${key}`, utils.toJson(item))\n      let exists = false\n      keys.forEach((_key) => {\n        if (_key === key) {\n          exists = true\n          return false\n        }\n      })\n      if (!exists) {\n        keys.push(key)\n      }\n      this.$$storage().setItem(`${this.$$prefix}.keys`, utils.toJson(keys))\n    } else {\n      // Remove existing\n      if (this.$$data[key]) {\n        this.remove(key)\n      }\n      // Add to expires heap\n      this.$$expiresHeap.push(item)\n      // Add to lru heap\n      this.$$lruHeap.push(item)\n      // Set item\n      this.$$data[key] = item\n      this.$$promises[key] = undefined\n    }\n\n    // Handle exceeded capacity\n    if (this.$$lruHeap.size() > this.$$capacity) {\n      this.remove(this.$$lruHeap.peek().key)\n    }\n\n    return value\n  }\n\n  /**\n   * Remove an item from the cache.\n   *\n   * @example\n   * const removed = cache.remove('foo');\n   *\n   * @method Cache#remove\n   * @param {string} key The key of the item to remove.\n   * @returns {*} The value of the removed item, if any.\n   */\n  remove (key) {\n    if (utils.isNumber(key)) {\n      key = '' + key\n    }\n    this.$$promises[key] = undefined\n    if (this.$$storage) {\n      const itemJson = this.$$storage().getItem(`${this.$$prefix}.data.${key}`)\n\n      if (itemJson) {\n        let item = utils.fromJson(itemJson)\n        this.$$lruHeap.remove({\n          key: key,\n          accessed: item.accessed\n        })\n        this.$$expiresHeap.remove({\n          key: key,\n          expires: item.expires\n        })\n        this.$$storage().removeItem(`${this.$$prefix}.data.${key}`)\n        let keysJson = this.$$storage().getItem(`${this.$$prefix}.keys`)\n        let keys = keysJson ? utils.fromJson(keysJson) : []\n        let index = keys.indexOf(key)\n\n        if (index >= 0) {\n          keys.splice(index, 1)\n        }\n        this.$$storage().setItem(`${this.$$prefix}.keys`, utils.toJson(keys))\n        return item.value\n      }\n    } else if (utils.isObject(this.$$data)) {\n      let value = this.$$data[key] ? this.$$data[key].value : undefined\n      this.$$lruHeap.remove(this.$$data[key])\n      this.$$expiresHeap.remove(this.$$data[key])\n      this.$$data[key] = undefined\n      return value\n    }\n  }\n\n  /**\n   * Remove all items from the cache.\n   *\n   * @example\n   * cache.removeAll();\n   *\n   * @method Cache#removeAll\n   */\n  removeAll () {\n    const storage = this.$$storage\n    const keys = this.keys()\n    this.$$lruHeap.removeAll()\n    this.$$expiresHeap.removeAll()\n\n    if (storage) {\n      storage().setItem(`${this.$$prefix}.keys`, utils.toJson([]))\n      keys.forEach((key) => {\n        storage().removeItem(`${this.$$prefix}.data.${key}`)\n      })\n    } else if (utils.isObject(this.$$data)) {\n      this.$$data = {}\n    }\n    this.$$promises = {}\n  }\n\n  /**\n   * Remove expired items from the cache, if any.\n   *\n   * @example\n   * const expiredItems = cache.removeExpired();\n   *\n   * @method Cache#removeExpired\n   * @returns {object} The expired items, if any.\n   */\n  removeExpired () {\n    const now = new Date().getTime()\n    const expired = {}\n    let expiredItem\n\n    while ((expiredItem = this.$$expiresHeap.peek()) && expiredItem.expires <= now) {\n      expired[expiredItem.key] = expiredItem.value ? expiredItem.value : null\n      this.$$expiresHeap.pop()\n    }\n\n    Object.keys(expired).forEach((key) => {\n      this.remove(key)\n    })\n\n    if (this.$$onExpire) {\n      Object.keys(expired).forEach((key) => {\n        this.$$onExpire(key, expired[key])\n      })\n    }\n\n    return expired\n  }\n\n  /**\n   * Update the {@link Cache#cacheFlushInterval} for the cache. Pass in `null`\n   * to disable the interval.\n   *\n   * @example\n   * cache.setCacheFlushInterval(60 * 60 * 1000);\n   *\n   * @method Cache#setCacheFlushInterval\n   * @param {number|null} cacheFlushInterval The new {@link Cache#cacheFlushInterval}.\n   */\n  setCacheFlushInterval (cacheFlushInterval) {\n    if (cacheFlushInterval === null) {\n      this.$$cacheFlushInterval = null\n    } else if (!utils.isNumber(cacheFlushInterval)) {\n      throw new TypeError(`\"cacheFlushInterval\" must be a number!`)\n    } else if (cacheFlushInterval <= 0) {\n      throw new Error(`\"cacheFlushInterval\" must be greater than zero!`)\n    }\n    this.$$cacheFlushInterval = cacheFlushInterval\n    clearInterval(this.$$cacheFlushIntervalId)\n    this.$$cacheFlushIntervalId = undefined\n    if (this.$$cacheFlushInterval) {\n      this.$$cacheFlushIntervalId = setInterval(() => this.removeAll(), this.$$cacheFlushInterval)\n    }\n  }\n\n  /**\n   * Update the {@link Cache#capacity} for the cache. Pass in `null` to reset\n   * to `Number.MAX_VALUE`.\n   *\n   * @example\n   * cache.setCapacity(1000);\n   *\n   * @method Cache#setCapacity\n   * @param {number|null} capacity The new {@link Cache#capacity}.\n   */\n  setCapacity (capacity) {\n    if (capacity === null) {\n      this.$$capacity = Number.MAX_VALUE\n    } else if (!utils.isNumber(capacity)) {\n      throw new TypeError(`\"capacity\" must be a number!`)\n    } else if (capacity <= 0) {\n      throw new Error(`\"capacity\" must be greater than zero!`)\n    } else {\n      this.$$capacity = capacity\n    }\n    const removed = {}\n    while (this.$$lruHeap.size() > this.$$capacity) {\n      removed[this.$$lruHeap.peek().key] = this.remove(this.$$lruHeap.peek().key)\n    }\n    return removed\n  }\n\n  /**\n   * Update the {@link Cache#deleteOnExpire} for the cache. Pass in `null` to\n   * reset to `\"none\"`.\n   *\n   * @example\n   * cache.setDeleteOnExpire('passive');\n   *\n   * @method Cache#setDeleteOnExpire\n   * @param {string|null} deleteOnExpire The new {@link Cache#deleteOnExpire}.\n   */\n  setDeleteOnExpire (deleteOnExpire, setRecycleFreq) {\n    if (deleteOnExpire === null) {\n      deleteOnExpire = 'none'\n    } else if (!utils.isString(deleteOnExpire)) {\n      throw new TypeError(`\"deleteOnExpire\" must be a string!`)\n    } else if (deleteOnExpire !== 'none' && deleteOnExpire !== 'passive' && deleteOnExpire !== 'aggressive') {\n      throw new Error(`\"deleteOnExpire\" must be \"none\", \"passive\" or \"aggressive\"!`)\n    }\n    this.$$deleteOnExpire = deleteOnExpire\n    if (setRecycleFreq !== false) {\n      this.setRecycleFreq(this.$$recycleFreq)\n    }\n  }\n\n  /**\n   * Update the {@link Cache#maxAge} for the cache. Pass in `null` to reset to\n   * to `Number.MAX_VALUE`.\n   *\n   * @example\n   * cache.setMaxAge(60 * 60 * 1000);\n   *\n   * @method Cache#setMaxAge\n   * @param {number|null} maxAge The new {@link Cache#maxAge}.\n   */\n  setMaxAge (maxAge) {\n    if (maxAge === null) {\n      this.$$maxAge = Number.MAX_VALUE\n    } else if (!utils.isNumber(maxAge)) {\n      throw new TypeError(`\"maxAge\" must be a number!`)\n    } else if (maxAge <= 0) {\n      throw new Error(`\"maxAge\" must be greater than zero!`)\n    } else {\n      this.$$maxAge = maxAge\n    }\n    const keys = this.keys()\n\n    this.$$expiresHeap.removeAll()\n\n    if (this.$$storage) {\n      keys.forEach((key) => {\n        const itemJson = this.$$storage().getItem(`${this.$$prefix}.data.${key}`)\n        if (itemJson) {\n          const item = utils.fromJson(itemJson)\n          if (this.$$maxAge === Number.MAX_VALUE) {\n            item.expires = Number.MAX_VALUE\n          } else {\n            item.expires = item.created + (item.maxAge || this.$$maxAge)\n          }\n          this.$$expiresHeap.push({\n            key: key,\n            expires: item.expires\n          })\n        }\n      })\n    } else {\n      keys.forEach((key) => {\n        const item = this.$$data[key]\n        if (item) {\n          if (this.$$maxAge === Number.MAX_VALUE) {\n            item.expires = Number.MAX_VALUE\n          } else {\n            item.expires = item.created + (item.maxAge || this.$$maxAge)\n          }\n          this.$$expiresHeap.push(item)\n        }\n      })\n    }\n\n    if (this.$$deleteOnExpire === 'aggressive') {\n      return this.removeExpired()\n    } else {\n      return {}\n    }\n  }\n\n  /**\n   * Update the {@link Cache#onExpire} for the cache. Pass in `null` to unset\n   * the global `onExpire` callback of the cache.\n   *\n   * @example\n   * cache.setOnExpire(function (key, value, done) {\n   *   // Do something\n   * });\n   *\n   * @method Cache#setOnExpire\n   * @param {function|null} onExpire The new {@link Cache#onExpire}.\n   */\n  setOnExpire (onExpire) {\n    if (onExpire === null) {\n      this.$$onExpire = null\n    } else if (!utils.isFunction(onExpire)) {\n      throw new TypeError(`\"onExpire\" must be a function!`)\n    } else {\n      this.$$onExpire = onExpire\n    }\n  }\n\n  /**\n   * Update multiple cache options at a time.\n   *\n   * @example\n   * cache.setOptions({\n   *   maxAge: 60 * 60 * 1000,\n   *   deleteOnExpire: 'aggressive'\n   * });\n   *\n   * @example <caption>Set two options, and reset the rest to the configured defaults</caption>\n   * cache.setOptions({\n   *   maxAge: 60 * 60 * 1000,\n   *   deleteOnExpire: 'aggressive'\n   * }, true);\n   *\n   * @method Cache#setOptions\n   * @param {object} options The options to set.\n   * @param {boolean} [strict] Reset options not passed to `options` to the\n   * configured defaults.\n   */\n  setOptions (options = {}, strict = false) {\n    if (!utils.isObject(options)) {\n      throw new TypeError(`\"options\" must be an object!`)\n    }\n\n    if (options.storagePrefix !== undefined) {\n      this.$$storagePrefix = options.storagePrefix\n    } else if (strict) {\n      this.$$storagePrefix = defaults.storagePrefix\n    }\n\n    this.$$prefix = this.$$storagePrefix + this.id\n\n    if (options.enabled !== undefined) {\n      this.$$enabled = !!options.enabled\n    } else if (strict) {\n      this.$$enabled = defaults.enabled\n    }\n\n    if (options.deleteOnExpire !== undefined) {\n      this.setDeleteOnExpire(options.deleteOnExpire, false)\n    } else if (strict) {\n      this.setDeleteOnExpire(defaults.deleteOnExpire, false)\n    }\n\n    if (options.recycleFreq !== undefined) {\n      this.setRecycleFreq(options.recycleFreq)\n    } else if (strict) {\n      this.setRecycleFreq(defaults.recycleFreq)\n    }\n\n    if (options.maxAge !== undefined) {\n      this.setMaxAge(options.maxAge)\n    } else if (strict) {\n      this.setMaxAge(defaults.maxAge)\n    }\n\n    if (options.storeOnResolve !== undefined) {\n      this.$$storeOnResolve = !!options.storeOnResolve\n    } else if (strict) {\n      this.$$storeOnResolve = defaults.storeOnResolve\n    }\n\n    if (options.storeOnReject !== undefined) {\n      this.$$storeOnReject = !!options.storeOnReject\n    } else if (strict) {\n      this.$$storeOnReject = defaults.storeOnReject\n    }\n\n    if (options.capacity !== undefined) {\n      this.setCapacity(options.capacity)\n    } else if (strict) {\n      this.setCapacity(defaults.capacity)\n    }\n\n    if (options.cacheFlushInterval !== undefined) {\n      this.setCacheFlushInterval(options.cacheFlushInterval)\n    } else if (strict) {\n      this.setCacheFlushInterval(defaults.cacheFlushInterval)\n    }\n\n    if (options.onExpire !== undefined) {\n      this.setOnExpire(options.onExpire)\n    } else if (strict) {\n      this.setOnExpire(defaults.onExpire)\n    }\n\n    if (options.storageMode !== undefined || options.storageImpl !== undefined) {\n      this.setStorageMode(options.storageMode || defaults.storageMode, options.storageImpl || defaults.storageImpl)\n    } else if (strict) {\n      this.setStorageMode(defaults.storageMode, defaults.storageImpl)\n    }\n  }\n\n  /**\n   * Update the {@link Cache#recycleFreq} for the cache. Pass in `null` to\n   * disable the interval.\n   *\n   * @example\n   * cache.setRecycleFreq(10000);\n   *\n   * @method Cache#setRecycleFreq\n   * @param {number|null} recycleFreq The new {@link Cache#recycleFreq}.\n   */\n  setRecycleFreq (recycleFreq) {\n    if (recycleFreq === null) {\n      this.$$recycleFreq = null\n    } else if (!utils.isNumber(recycleFreq)) {\n      throw new TypeError(`\"recycleFreq\" must be a number!`)\n    } else if (recycleFreq <= 0) {\n      throw new Error(`\"recycleFreq\" must be greater than zero!`)\n    } else {\n      this.$$recycleFreq = recycleFreq\n    }\n    clearInterval(this.$$recycleFreqId)\n    if (this.$$deleteOnExpire === 'aggressive' && this.$$recycleFreq) {\n      this.$$recycleFreqId = setInterval(() => this.removeExpired(), this.$$recycleFreq)\n    } else {\n      this.$$recycleFreqId = undefined\n    }\n  }\n\n  /**\n   * Update the {@link Cache#storageMode} for the cache.\n   *\n   * @method Cache#setStorageMode\n   * @param {string} storageMode The new {@link Cache#storageMode}.\n   * @param {object} storageImpl The new {@link Cache~StorageImpl}.\n   */\n  setStorageMode (storageMode, storageImpl) {\n    if (!utils.isString(storageMode)) {\n      throw new TypeError(`\"storageMode\" must be a string!`)\n    } else if (storageMode !== 'memory' && storageMode !== 'localStorage' && storageMode !== 'sessionStorage') {\n      throw new Error(`\"storageMode\" must be \"memory\", \"localStorage\", or \"sessionStorage\"!`)\n    }\n\n    const prevStorage = this.$$storage\n    const prevData = this.$$data\n    let shouldReInsert = false\n    let items = {}\n\n    const load = (prevStorage, prevData) => {\n      const keys = this.keys()\n      const prevDataIsObject = utils.isObject(prevData)\n      keys.forEach((key) => {\n        if (prevStorage) {\n          const itemJson = prevStorage().getItem(`${this.$$prefix}.data.${key}`)\n          if (itemJson) {\n            items[key] = utils.fromJson(itemJson)\n          }\n        } else if (prevDataIsObject) {\n          items[key] = prevData[key]\n        }\n        this.remove(key)\n        shouldReInsert || (shouldReInsert = true)\n      })\n    }\n\n    if (!this.$$initializing) {\n      load(prevStorage, prevData)\n    }\n\n    this.$$storageMode = storageMode\n\n    if (storageImpl) {\n      if (!utils.isObject(storageImpl)) {\n        throw new TypeError(`\"storageImpl\" must be an object!`)\n      } else if (typeof storageImpl.setItem !== 'function') {\n        throw new Error(`\"storageImpl\" must implement \"setItem(key, value)\"!`)\n      } else if (typeof storageImpl.getItem !== 'function') {\n        throw new Error(`\"storageImpl\" must implement \"getItem(key)\"!`)\n      } else if (typeof storageImpl.removeItem !== 'function') {\n        throw new Error(`\"storageImpl\" must implement \"removeItem(key)\"!`)\n      }\n      this.$$storage = () => storageImpl\n    } else if (this.$$storageMode === 'localStorage') {\n      try {\n        localStorage.setItem('cachefactory', 'cachefactory')\n        localStorage.removeItem('cachefactory')\n        this.$$storage = () => localStorage\n      } catch (e) {\n        this.$$storage = null\n        this.$$storageMode = 'memory'\n      }\n    } else if (this.$$storageMode === 'sessionStorage') {\n      try {\n        sessionStorage.setItem('cachefactory', 'cachefactory')\n        sessionStorage.removeItem('cachefactory')\n        this.$$storage = () => sessionStorage\n      } catch (e) {\n        this.$$storage = null\n        this.$$storageMode = 'memory'\n      }\n    } else {\n      this.$$storage = null\n      this.$$storageMode = 'memory'\n    }\n\n    if (this.$$initializing) {\n      load(this.$$storage, this.$$data)\n    }\n\n    if (shouldReInsert) {\n      Object.keys(items).forEach((key) => {\n        const item = items[key]\n        this.put(key, item.value, {\n          created: item.created,\n          accessed: item.accessed,\n          expires: item.expires\n        })\n      })\n    }\n  }\n\n  /**\n   * Reset an item's age in the cache, or if `key` is unspecified, touch all\n   * items in the cache.\n   *\n   * @example\n   * cache.touch('foo');\n   *\n   * @method Cache#touch\n   * @param {string} [key] The key of the item to touch.\n   * @param {object} [options] Options to pass to {@link Cache#put} if\n   * necessary.\n   */\n  touch (key, options) {\n    if (key) {\n      const val = this.get(key, {\n        onExpire: (k, v) => this.put(k, v)\n      })\n      if (val) {\n        this.put(key, val, options)\n      }\n    } else {\n      const keys = this.keys()\n      for (var i = 0; i < keys.length; i++) {\n        this.touch(keys[i], options)\n      }\n    }\n  }\n\n  /**\n   * Retrieve the values of all items in the cache.\n   *\n   * @example\n   * const values = cache.values();\n   *\n   * @method Cache#values\n   * @returns {array} The values of the items in the cache.\n   */\n  values () {\n    return this.keys().map((key) => this.get(key))\n  }\n}\n","/**\n * A instance of `CacheFactory` holds multiple caches, and provides methods for\n * manipulating all of the caches at once.\n *\n * @example\n * import CacheFactory from 'cachefactory';\n *\n * const cacheFactory = new CacheFactory();\n * const cache = cacheFactory.createCache('my-cache');\n *\n * @class CacheFactory\n */\nexport default class CacheFactory {\n  constructor () {\n    Object.defineProperty(this, 'caches', {\n      writable: true,\n      value: {}\n    })\n  }\n\n  /**\n   * Calls {@link Cache#removeAll} on each {@link Cache} in this\n   * {@link CacheFactory}.\n   *\n   * @example\n   * cacheFactory.clearAll();\n   *\n   * @method CacheFactory#clearAll\n   */\n  clearAll () {\n    this.keys().forEach((cacheId) => {\n      this.get(cacheId).removeAll()\n    })\n  }\n\n  /**\n   * Create a new {@link Cache}. If a cache with the same `id` had been created\n   * in a previous browser session, then it will attempt to load any data that\n   * had been saved previously.\n   *\n   * @example\n   * import CacheFactory from 'cachefactory';\n   *\n   * const cacheFactory = new CacheFactory();\n   * const options = {...};\n   * const cache = cacheFactory.createCache('my-cache', options);\n   *\n   * cache.put('foo', 'bar');\n   * console.log(cache.get('foo')); // \"bar\"\n   *\n   * @method CacheFactory#createCache\n   * @param {string} id A unique identifier for the new {@link Cache}.\n   * @param {object} [options] Configuration options. See {@link Cache}.\n   * @returns {Cache} The new {@link Cache} instance.\n   */\n  createCache (id, options = {}) {\n    if (this.caches[id]) {\n      throw new Error(`cache \"${id}\" already exists!`)\n    }\n    options.parent = this\n    this.caches[id] = new CacheFactory.Cache(id, options)\n    return this.caches[id]\n  }\n\n  /**\n   * Calls {@link Cache#destroy} on the {@link Cache} in this\n   * {@link CacheFactory} that has the specified `id`.\n   *\n   * @example\n   * cacheFactory.destroy('my-cache');\n   *\n   * @method CacheFactory#destroy\n   * @param {string} id TODO\n   */\n  destroy (id) {\n    this.get(id).destroy()\n    this.caches[id] = undefined\n  }\n\n  /**\n   * Calls {@link Cache#destroy} on each {@link Cache} in this\n   * {@link CacheFactory}.\n   *\n   * @example\n   * cacheFactory.destroyAll();\n   *\n   * @method CacheFactory#destroyAll\n   */\n  destroyAll () {\n    this.keys().forEach((id) => {\n      this.get(id).destroy()\n    })\n    this.caches = {}\n  }\n\n  /**\n   * Calls {@link Cache#disable} on each {@link Cache} in this\n   * {@link CacheFactory}.\n   *\n   * @example\n   * cacheFactory.disableAll();\n   *\n   * @method CacheFactory#disableAll\n   */\n  disableAll () {\n    this.keys().forEach((cacheId) => {\n      this.get(cacheId).disable()\n    })\n  }\n\n  /**\n   * Calls {@link Cache#enable} on each {@link Cache} in this\n   * {@link CacheFactory}.\n   *\n   * @example\n   * cacheFactory.enableAll();\n   *\n   * @method CacheFactory#enableAll\n   */\n  enableAll () {\n    this.keys().forEach((cacheId) => {\n      this.get(cacheId).enable()\n    })\n  }\n\n  /**\n   * Returns whether the {@link Cache} with the specified `id` exists in this\n   * {@link CacheFactory}.\n   *\n   * @example\n   * const exists = cacheFactory.exists('my-cache');\n   *\n   * @method CacheFactory#exists\n   * @returns {boolean} Whether the {@link Cache} with the specified `id` exists\n   * in this {@link CacheFactory}.\n   */\n  exists (id) {\n    return !!this.caches[id]\n  }\n\n  /**\n   * Returns a reference to the {@link Cache} in this {@link CacheFactory} that\n   * has the specified `id`.\n   *\n   * @example\n   * const cache = cacheFactory.get('my-cache');\n   *\n   * @method CacheFactory#get\n   * @param {string} id The `id` of the {@link Cache} to retrieve.\n   * @returns {Cache} The {@link Cache} instance.\n   * @throws {ReferenceError} Throws a `ReferenceError` if the {@link Cache}\n   * does not exist.\n   */\n  get (id) {\n    const cache = this.caches[id]\n    if (!cache) {\n      throw new ReferenceError(`Cache \"${id}\" does not exist!`)\n    }\n    return cache\n  }\n\n  /**\n   * Returns information on this {@link CacheFactory} and its {@link Cache}\n   * instance.\n   *\n   * @example\n   * const info = cacheFactory.info();\n   * info.size; // 3\n   * info.caches['my-cache']; // { size: 1234, ... }\n   * info.caches['my-cache2']; // { size: 51, ... }\n   * info.caches['my-cache3']; // { size: 43, ... }\n   *\n   * @method CacheFactory#info\n   * @returns {object} The detailed information.\n   */\n  info () {\n    const keys = this.keys()\n    const info = {\n      size: keys.length,\n      caches: {}\n    }\n    keys.forEach((cacheId) => {\n      info.caches[cacheId] = this.get(cacheId).info()\n    })\n    Object.keys(CacheFactory.defaults).forEach((key, value) => {\n      info[key] = CacheFactory.defaults[key]\n    })\n    return info\n  }\n\n  /**\n   * Returns an array of identifiers of the {@link Cache} instances in this\n   * {@link CacheFactory}.\n   *\n   * @example\n   * const keys = cacheFactory.keys();\n   *\n   * @method CacheFactory#keys\n   * @returns {string[]} The {@link Cache} identifiers.\n   */\n  keys () {\n    return Object.keys(this.caches).filter((key) => this.caches[key])\n  }\n\n  /**\n   * Returns an object of key-value pairs representing the identifiers of the\n   * {@link Cache} instances in this {@link CacheFactory}.\n   *\n   * @example\n   * const keySet = cacheFactory.keySet();\n   *\n   * @method CacheFactory#keySet\n   * @returns {object} The {@link Cache} identifiers.\n   */\n  keySet () {\n    const set = {}\n    this.keys().forEach((key) => {\n      set[key] = key\n    })\n    return set\n  }\n\n  /**\n   * Calls {@link Cache#removeExpired} on each {@link Cache} in this\n   * {@link CacheFactory} and returns the removed items, if any.\n   *\n   * @example\n   * const expired = cacheFactory.removeExpiredFromAll();\n   *\n   * @method CacheFactory#removeExpiredFromAll\n   * @returns {object} The removed items, if any.\n   */\n  removeExpiredFromAll () {\n    const expired = {}\n    this.keys().forEach((id) => {\n      expired[id] = this.get(id).removeExpired()\n    })\n    return expired\n  }\n\n  /**\n   * Calls {@link Cache#touch} on each {@link Cache} in this\n   * {@link CacheFactory}.\n   *\n   * @example\n   * cacheFactory.touchAll();\n   *\n   * @method CacheFactory#touchAll\n   */\n  touchAll () {\n    this.keys().forEach((cacheId) => {\n      this.get(cacheId).touch()\n    })\n  }\n}\n","import BinaryHeap from '../node_modules/yabh/src/index'\nimport Cache from './Cache'\nimport CacheFactory from './CacheFactory'\nimport defaults from './defaults'\nimport utils from './utils'\n\n/**\n * Registered as `cachefactory` in NPM and Bower.\n *\n * @module cachefactory\n *\n * @example <caption>Install from NPM</caption>\n * npm i --save cachefactory\n * @example <caption>Install from Bower</caption>\n * bower i --save cachefactory\n * @example <caption>Load into your app via script tag</caption>\n * <script src=\"/path/to/cachefactory.min.js\"></script>\n * @example <caption>Load into your app via CommonJS</caption>\n * var CacheFactory = require('cachefactory');\n * @example <caption>Load into your app via ES2015 Modules</caption>\n * import CacheFactory from 'cachefactory';\n * @example <caption>Load into your app via AMD</caption>\n * define('myApp', ['cachefactory'], function (CacheFactory) { ... })\n */\nexport default CacheFactory\n\n/**\n * The `BinaryHeap` constructor function.\n *\n * @example\n * import CacheFactory from 'cachefactory';\n * const { BinaryHeap } = CacheFactory;\n *\n * @name BinaryHeap\n * @memberof module:cachefactory\n * @see https://github.com/jmdobry/yabh\n * @type {function}\n */\nCacheFactory.BinaryHeap = BinaryHeap\n\n/**\n * The {@link Cache} constructor function.\n *\n * @example\n * import CacheFactory from 'cachefactory';\n * const { Cache } = CacheFactory;\n *\n * @name Cache\n * @memberof module:cachefactory\n * @see Cache\n * @type {function}\n */\nCacheFactory.Cache = Cache\n\n/**\n * The default cache values. Modify this object to change the default values.\n *\n * @example\n * import CacheFactory from 'cachefactory';\n * const { defaults } = CacheFactory;\n *\n * // Change the default \"maxAge\" for caches that will be instantiated\n * // after this point.\n * defaults.maxAge = 60 * 60 * 1000;\n *\n * @name defaults\n * @memberof module:cachefactory\n * @see Cache\n * @type {object}\n */\nCacheFactory.defaults = defaults\n\n/**\n * Utility functions used throughout this library.\n *\n * @example\n * import Promise from 'bluebird';\n * import CacheFactory from 'cachefactory';\n * const { utils } = CacheFactory;\n *\n * // Make this library use your Promise lib\n * utils.Promise = Promise;\n *\n * @name utils\n * @memberof module:cachefactory\n * @type {object}\n */\nCacheFactory.utils = utils\n"],"names":["CacheFactory"],"mappings":"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"}