{"version":3,"file":null,"sources":["../node_modules/yabh/src/index.js","../src/index.js"],"sourcesContent":["/**\n * @method bubbleUp\n * @param {array} heap The heap.\n * @param {function} weightFunc The weight function.\n * @param {number} n The index of the element to bubble up.\n */\nconst bubbleUp = function (heap, weightFunc, n) {\n  const element = heap[n]\n  const weight = weightFunc(element)\n  // When at 0, an element can not go up any further.\n  while (n > 0) {\n    // Compute the parent element's index, and fetch it.\n    let parentN = Math.floor((n + 1) / 2) - 1\n    let parent = heap[parentN]\n    // If the parent has a lesser weight, things are in order and we\n    // are done.\n    if (weight >= weightFunc(parent)) {\n      break\n    } else {\n      heap[parentN] = element\n      heap[n] = parent\n      n = parentN\n    }\n  }\n}\n\n/**\n * @method bubbleDown\n * @param {array} heap The heap.\n * @param {function} weightFunc The weight function.\n * @param {number} n The index of the element to sink down.\n */\nconst bubbleDown = function (heap, weightFunc, n) {\n  var length = heap.length\n  let node = heap[n]\n  let nodeWeight = weightFunc(node)\n\n  while (true) {\n    let child2N = (n + 1) * 2\n    let child1N = child2N - 1\n    let swap = null;\n    if (child1N < length) {\n      let child1 = heap[child1N]\n      let child1Weight = weightFunc(child1)\n      // If the score is less than our node's, we need to swap.\n      if (child1Weight < nodeWeight) {\n        swap = child1N\n      }\n    }\n    // Do the same checks for the other child.\n    if (child2N < length) {\n      let child2 = heap[child2N]\n      let child2Weight = weightFunc(child2)\n      if (child2Weight < (swap === null ? nodeWeight : weightFunc(heap[child1N]))) {\n        swap = child2N\n      }\n    }\n\n    if (swap === null) {\n      break\n    } else {\n      heap[n] = heap[swap]\n      heap[swap] = node\n      n = swap\n    }\n  }\n}\n\nfunction BinaryHeap (weightFunc, compareFunc) {\n  if (!weightFunc) {\n    weightFunc = function (x) { return x }\n  }\n  if (!compareFunc) {\n    compareFunc = function (x, y) { return x === y }\n  }\n  if (typeof weightFunc !== 'function') {\n    throw new Error('BinaryHeap([weightFunc][, compareFunc]): \"weightFunc\" must be a function!')\n  }\n  if (typeof compareFunc !== 'function') {\n    throw new Error('BinaryHeap([weightFunc][, compareFunc]): \"compareFunc\" must be a function!')\n  }\n  this.weightFunc = weightFunc\n  this.compareFunc = compareFunc\n  this.heap = []\n}\n\nlet BHProto = BinaryHeap.prototype\n\nBHProto.push = function (node) {\n  this.heap.push(node)\n  bubbleUp(this.heap, this.weightFunc, this.heap.length - 1)\n}\n\nBHProto.peek = function () {\n  return this.heap[0]\n}\n\nBHProto.pop = function () {\n  let front = this.heap[0]\n  let end = this.heap.pop()\n  if (this.heap.length > 0) {\n    this.heap[0] = end\n    bubbleDown(this.heap, this.weightFunc, 0)\n  }\n  return front\n}\n\nBHProto.remove = function (node) {\n  var length = this.heap.length\n  for (let i = 0; i < length; i++) {\n    if (this.compareFunc(this.heap[i], node)) {\n      let removed = this.heap[i]\n      let end = this.heap.pop()\n      if (i !== length - 1) {\n        this.heap[i] = end\n        bubbleUp(this.heap, this.weightFunc, i)\n        bubbleDown(this.heap, this.weightFunc, i)\n      }\n      return removed\n    }\n  }\n  return null\n}\n\nBHProto.removeAll = function () {\n  this.heap = []\n}\n\nBHProto.size = function () {\n  return this.heap.length\n}\n\nexport default BinaryHeap\n","import BinaryHeap from '../node_modules/yabh/src/index'\n\nlet _Promise = null\ntry {\n  _Promise = window.Promise\n} catch (e) {}\n\nconst utils = {\n  isNumber (value) {\n    return typeof value === 'number'\n  },\n\n  isString (value) {\n    return typeof value === 'string'\n  },\n\n  isObject (value) {\n    return value !== null && typeof value === 'object'\n  },\n\n  isFunction (value) {\n    return typeof value === 'function'\n  },\n\n  fromJson (value) {\n    return JSON.parse(value)\n  },\n\n  toJson (value) {\n    return JSON.stringify(value)\n  },\n\n  equals (a, b) {\n    return a === b\n  },\n\n  Promise: _Promise\n}\n\nfunction _isPromiseLike (value) {\n  return value && utils.isFunction(value.then)\n}\n\nconst defaults = {\n  capacity: Number.MAX_VALUE,\n  cacheFlushInterval: null,\n  deleteOnExpire: 'none',\n  enabled: true,\n  onExpire: null,\n  maxAge: Number.MAX_VALUE,\n  recycleFreq: 1000,\n  storageMode: 'memory',\n  storageImpl: null,\n  storagePrefix: 'cachefactory.caches.',\n  storeOnReject: false,\n  storeOnResolve: false\n}\n\nconst assignMsg = `Cannot assign to read only property`\n\nclass Cache {\n  constructor (id, options = {}) {\n    if (!utils.isString(id)) {\n      throw new TypeError(`\"id\" must be a string!`)\n    }\n\n    Object.defineProperties(this, {\n      // Writable\n      $$cacheFlushInterval: { writable: true, value: undefined },\n      $$cacheFlushIntervalId: { writable: true, value: undefined },\n      $$capacity: { writable: true, value: undefined },\n      $$data: { writable: true, value: {} },\n      $$deleteOnExpire: { writable: true, value: undefined },\n      $$enabled: { writable: true, value: undefined },\n      $$expiresHeap: { writable: true, value: new BinaryHeap((x) => { x.accessed }, utils.equals) },\n      $$initializing: { writable: true, value: true },\n      $$lruHeap: { writable: true, value: new BinaryHeap((x) => { x.accessed }, utils.equals) },\n      $$maxAge: { writable: true, value: undefined },\n      $$onExpire: { writable: true, value: undefined },\n      $$prefix: { writable: true, value: '' },\n      $$promises: { writable: true, value: {} },\n      $$recycleFreq: { writable: true, value: undefined },\n      $$recycleFreqId: { writable: true, value: undefined },\n      $$storage: { writable: true, value: undefined },\n      $$storageMode: { writable: true, value: undefined },\n      $$storagePrefix: { writable: true, value: undefined },\n      $$storeOnReject: { writable: true, value: undefined },\n      $$storeOnResolve: { writable: true, value: undefined },\n\n      // Read-only\n      $$parent: { value: options.parent },\n\n      /**\n       * @name Cache#capacity\n       * @public\n       * @readonly\n       * @type {number}\n       */\n      capacity: {\n        enumerable: true,\n        get: () => this.$$capacity,\n        set: () => { throw new Error(`${assignMsg} 'capacity'`) }\n      },\n\n      /**\n       * @name Cache#cacheFlushInterval\n       * @public\n       * @readonly\n       * @type {number|null}\n       */\n      cacheFlushInterval: {\n        enumerable: true,\n        get: () => this.$$cacheFlushInterval,\n        set: () => { throw new Error(`${assignMsg} 'cacheFlushInterval'`) }\n      },\n\n      /**\n       * @name Cache#deleteOnExpire\n       * @public\n       * @readonly\n       * @type {string}\n       */\n      deleteOnExpire: {\n        enumerable: true,\n        get: () => this.$$deleteOnExpire,\n        set: () => { throw new Error(`${assignMsg} 'deleteOnExpire'`) }\n      },\n\n      /**\n       * @name Cache#enabled\n       * @public\n       * @readonly\n       * @type {boolean}\n       */\n      enabled: {\n        enumerable: true,\n        get: () => this.$$enabled,\n        set: () => { throw new Error(`${assignMsg} 'enabled'`) }\n      },\n\n      /**\n       * @name Cache#id\n       * @public\n       * @readonly\n       * @type {string}\n       */\n      id: {\n        enumerable: true,\n        value: id\n      },\n\n      /**\n       * @name Cache#maxAge\n       * @public\n       * @readonly\n       * @type {number}\n       */\n      maxAge: {\n        enumerable: true,\n        get: () => this.$$maxAge,\n        set: () => { throw new Error(`${assignMsg} 'maxAge'`) }\n      },\n\n      /**\n       * @name Cache#onExpire\n       * @public\n       * @readonly\n       * @type {function}\n       */\n      onExpire: {\n        enumerable: true,\n        get: () => this.$$onExpire,\n        set: () => { throw new Error(`${assignMsg} 'onExpire'`) }\n      },\n\n      /**\n       * @name Cache#recycleFreq\n       * @public\n       * @readonly\n       * @type {number|null}\n       */\n      recycleFreq: {\n        enumerable: true,\n        get: () => this.$$recycleFreq,\n        set: () => { throw new Error(`${assignMsg} 'recycleFreq'`) }\n      },\n\n      /**\n       * @name Cache#storageMode\n       * @public\n       * @readonly\n       * @type {string}\n       */\n      storageMode: {\n        enumerable: true,\n        get: () => this.$$storageMode,\n        set: () => { throw new Error(`${assignMsg} 'storageMode'`) }\n      },\n\n      /**\n       * @name Cache#storagePrefix\n       * @public\n       * @readonly\n       * @type {string}\n       */\n      storagePrefix: {\n        enumerable: true,\n        get: () => this.$$storagePrefix,\n        set: () => { throw new Error(`${assignMsg} 'storagePrefix'`) }\n      },\n\n      /**\n       * @name Cache#storeOnReject\n       * @public\n       * @readonly\n       * @type {boolean}\n       */\n      storeOnReject: {\n        enumerable: true,\n        get: () => this.$$storeOnReject,\n        set: () => { throw new Error(`${assignMsg} 'storeOnReject'`) }\n      },\n\n      /**\n       * @name Cache#storeOnResolve\n       * @public\n       * @readonly\n       * @type {boolean}\n       */\n      storeOnResolve: {\n        enumerable: true,\n        get: () => this.$$storeOnResolve,\n        set: () => { throw new Error(`${assignMsg} 'storeOnResolve'`) }\n      }\n    })\n\n    this.setOptions(options, true)\n    this.$$initializing = false\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#destroy\n   */\n  destroy () {\n    clearInterval(this.$$cacheFlushIntervalId)\n    clearInterval(this.$$recycleFreqId)\n    this.removeAll()\n    if (this.$$storage) {\n      this.$$storage().removeItem(`${this.$$prefix}.keys`)\n      this.$$storage().removeItem(this.$$prefix)\n    }\n    this.$$storage = null\n    this.$$data = null\n    this.$$lruHeap = null\n    this.$$expiresHeap = null\n    this.$$prefix = null\n    if (this.$$parent) {\n      this.$$parent.caches[this.id] = undefined\n    }\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#disable\n   */\n  disable () {\n    this.$$enabled = false\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#enable\n   */\n  enable () {\n    this.$$enabled = true\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#get\n   * @param {string|string[]} key TODO\n   * @param {object} [options] TODO\n   * @returns {*} TODO\n   */\n  get (key, options = {}) {\n    if (Array.isArray(key)) {\n      const keys = key\n      const values = []\n\n      keys.forEach((key) => {\n        const value = this.get(key, options)\n        if (value !== null && value !== undefined) {\n          values.push(value)\n        }\n      })\n\n      return values\n    } else {\n      key = '' + key\n\n      if (!this.enabled) {\n        return\n      }\n    }\n\n    if (!utils.isString(key)) {\n      throw new TypeError(`\"key\" must be a string!`)\n    } else if (options && !utils.isObject(options)) {\n      throw new TypeError(`\"options\" must be an object!`)\n    } else if (options.onExpire && !utils.isFunction(options.onExpire)) {\n      throw new TypeError(`\"options.onExpire\" must be a function!`)\n    }\n\n    let item\n\n    if (this.$$storage) {\n      if (this.$$promises[key]) {\n        return this.$$promises[key]\n      }\n\n      const itemJson = this.$$storage().getItem(`${this.$$prefix}.data.${key}`)\n\n      if (itemJson) {\n        item = utils.fromJson(itemJson)\n      }\n    } else if (utils.isObject(this.$$data)) {\n      item = this.$$data[key]\n    }\n\n    if (!item) {\n      return\n    }\n\n    let value = item.value\n    let now = new Date().getTime()\n\n    if (this.$$storage) {\n      this.$$lruHeap.remove({\n        key: key,\n        accessed: item.accessed\n      })\n      item.accessed = now\n      this.$$lruHeap.push({\n        key: key,\n        accessed: now\n      })\n    } else {\n      this.$$lruHeap.remove(item)\n      item.accessed = now\n      this.$$lruHeap.push(item)\n    }\n\n    if (this.$$deleteOnExpire === 'passive' && 'expires' in item && item.expires < now) {\n      this.remove(key)\n\n      if (this.$$onExpire) {\n        this.$$onExpire(key, item.value, options.onExpire)\n      } else if (options.onExpire) {\n        options.onExpire.call(this, key, item.value)\n      }\n      value = undefined\n    } else if (this.$$storage) {\n      this.$$storage().setItem(`${this.$$prefix}.data.${key}`, utils.toJson(item))\n    }\n\n    return value\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#info\n   * @param {string|string[]} key TODO\n   * @returns {*} TODO\n   */\n  info (key) {\n    if (key) {\n      let item\n      if (this.$$storage) {\n        const itemJson = this.$$storage().getItem(`${this.$$prefix}.data.${key}`)\n        if (itemJson) {\n          item = utils.fromJson(itemJson)\n        }\n      } else if (utils.isObject(this.$$data)) {\n        item = this.$$data[key]\n      }\n      if (item) {\n        return {\n          created: item.created,\n          accessed: item.accessed,\n          expires: item.expires,\n          isExpired: (new Date().getTime() - item.created) > (item.maxAge || this.$$maxAge)\n        }\n      }\n    } else {\n      return {\n        id: this.id,\n        capacity: this.capacity,\n        maxAge: this.maxAge,\n        deleteOnExpire: this.deleteOnExpire,\n        onExpire: this.onExpire,\n        cacheFlushInterval: this.cacheFlushInterval,\n        recycleFreq: this.recycleFreq,\n        storageMode: this.storageMode,\n        storageImpl: this.$$storage ? this.$$storage() : undefined,\n        enabled: this.enabled,\n        size: this.$$lruHeap && this.$$lruHeap.size() || 0\n      }\n    }\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#keys\n   * @returns {*} TODO\n   */\n  keys () {\n    if (this.$$storage) {\n      const keysJson = this.$$storage().getItem(`${this.$$prefix}.keys`)\n\n      if (keysJson) {\n        return utils.fromJson(keysJson)\n      } else {\n        return []\n      }\n    } else {\n      return Object.keys(this.$$data)\n    }\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#keySet\n   * @returns {*} TODO\n   */\n  keySet () {\n    const set = {}\n    this.keys().forEach((key) => {\n      set[key] = key\n    })\n    return set\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#put\n   * @param {string} key TODO\n   * @param {*} value TODO\n   * @param {object} [options] TODO\n   * @returns {*} TODO\n   */\n  put (key, value, options = {}) {\n    const storeOnResolve = options.storeOnResolve !== undefined ? !!options.storeOnResolve : this.$$storeOnResolve\n    const storeOnReject = options.storeOnReject !== undefined ? !!options.storeOnReject : this.$$storeOnReject\n\n    const getHandler = (store, isError) => {\n      return (v) => {\n        if (store) {\n          this.$$promises[key] = undefined\n          if (utils.isObject(v) && 'status' in v && 'data' in v) {\n            v = [v.status, v.data, v.headers(), v.statusText]\n            this.put(key, v)\n          } else {\n            this.put(key, v)\n          }\n        }\n        if (isError) {\n          if (utils.Promise) {\n            return utils.Promise.reject(v)\n          } else {\n            throw v\n          }\n        } else {\n          return v\n        }\n      }\n    }\n\n    if (!this.$$enabled || !utils.isObject(this.$$data) || value === null || value === undefined) {\n      return\n    }\n    key = '' + key\n\n    if (!utils.isString(key)) {\n      throw new Error(`\"key\" must be a string!`)\n    }\n\n    const now = new Date().getTime()\n    const item = {\n      key: key,\n      value: _isPromiseLike(value) ? value.then(getHandler(storeOnResolve, false), getHandler(storeOnReject, true)) : value,\n      created: options.created === undefined ? now : options.created,\n      accessed: options.accessed === undefined ? now : options.accessed\n    }\n    if (utils.isNumber(options.maxAge)) {\n      item.maxAge = options.maxAge\n    }\n\n    if (options.expires === undefined) {\n      item.expires = item.created + (item.maxAge || this.$$maxAge)\n    } else {\n      item.expires = options.expires\n    }\n\n    if (this.$$storage) {\n      if (_isPromiseLike(item.value)) {\n        this.$$promises[key] = item.value\n        return this.$$promises[key]\n      }\n      const keysJson = this.$$storage().getItem(`${this.$$prefix}.keys`)\n      const keys = keysJson ? utils.fromJson(keysJson) : []\n      const itemJson = this.$$storage().getItem(`${this.$$prefix}.data.${key}`)\n\n      // Remove existing\n      if (itemJson) {\n        this.remove(key)\n      }\n      // Add to expires heap\n      this.$$expiresHeap.push({\n        key: key,\n        expires: item.expires\n      })\n      // Add to lru heap\n      this.$$lruHeap.push({\n        key: key,\n        accessed: item.accessed\n      })\n      // Set item\n      this.$$storage().setItem(`${this.$$prefix}.data.${key}`, utils.toJson(item))\n      let exists = false\n      keys.forEach((_key) => {\n        if (_key === key) {\n          exists = true\n          return false\n        }\n      })\n      if (!exists) {\n        keys.push(key)\n      }\n      this.$$storage().setItem(`${this.$$prefix}.keys`, utils.toJson(keys))\n    } else {\n      // Remove existing\n      if (this.$$data[key]) {\n        this.remove(key)\n      }\n      // Add to expires heap\n      this.$$expiresHeap.push(item)\n      // Add to lru heap\n      this.$$lruHeap.push(item)\n      // Set item\n      this.$$data[key] = item\n      this.$$promises[key] = undefined\n    }\n\n    // Handle exceeded capacity\n    if (this.$$lruHeap.size() > this.$$capacity) {\n      this.remove(this.$$lruHeap.peek().key)\n    }\n\n    return value\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#remove\n   * @param {string} key TODO\n   * @returns {*} TODO\n   */\n  remove (key) {\n    key = '' + key\n    this.$$promises[key] = undefined\n    if (this.$$storage) {\n      const itemJson = this.$$storage().getItem(`${this.$$prefix}.data.${key}`)\n\n      if (itemJson) {\n        let item = utils.fromJson(itemJson)\n        this.$$lruHeap.remove({\n          key: key,\n          accessed: item.accessed\n        })\n        this.$$expiresHeap.remove({\n          key: key,\n          expires: item.expires\n        })\n        this.$$storage().removeItem(`${this.$$prefix}.data.${key}`)\n        let keysJson = this.$$storage().getItem(`${this.$$prefix}.keys`)\n        let keys = keysJson ? utils.fromJson(keysJson) : []\n        let index = keys.indexOf(key)\n\n        if (index >= 0) {\n          keys.splice(index, 1)\n        }\n        this.$$storage().setItem(`${this.$$prefix}.keys`, utils.toJson(keys))\n        return item.value\n      }\n    } else if (utils.isObject(this.$$data)) {\n      let value = this.$$data[key] ? this.$$data[key].value : undefined\n      this.$$lruHeap.remove(this.$$data[key])\n      this.$$expiresHeap.remove(this.$$data[key])\n      this.$$data[key] = undefined\n      return value\n    }\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#removeAll\n   */\n  removeAll () {\n    const storage = this.$$storage\n    const keys = this.keys()\n    this.$$lruHeap.removeAll()\n    this.$$expiresHeap.removeAll()\n\n    if (storage) {\n      storage().setItem(`${this.$$prefix}.keys`, utils.toJson([]))\n      keys.forEach((key) => {\n        storage().removeItem(`${this.$$prefix}.data.${key}`)\n      })\n    } else if (utils.isObject(this.$$data)) {\n      this.$$data = {}\n    }\n    this.$$promises = {}\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#removeExpired\n   * @returns {object} TODO\n   */\n  removeExpired () {\n    const now = new Date().getTime()\n    const expired = {}\n    let expiredItem\n\n    while ((expiredItem = this.$$expiresHeap.peek()) && expiredItem.expires <= now) {\n      expired[expiredItem.key] = expiredItem.value ? expiredItem.value : null\n      this.$$expiresHeap.pop()\n    }\n\n    Object.keys(expired).forEach((key) => {\n      this.remove(key)\n    })\n\n    if (this.$$onExpire) {\n      Object.keys(expired).forEach((key) => {\n        this.$$onExpire(key, expired[key])\n      })\n    }\n\n    return expired\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#setCacheFlushInterval\n   * @param {number|null} cacheFlushInterval TODO\n   */\n  setCacheFlushInterval (cacheFlushInterval) {\n    if (cacheFlushInterval === null) {\n      this.$$cacheFlushInterval = null\n    } else if (!utils.isNumber(cacheFlushInterval)) {\n      throw new TypeError(`\"cacheFlushInterval\" must be a number!`)\n    } else if (cacheFlushInterval <= 0) {\n      throw new Error(`\"cacheFlushInterval\" must be greater than zero!`)\n    }\n    this.$$cacheFlushInterval = cacheFlushInterval\n    clearInterval(this.$$cacheFlushIntervalId)\n    this.$$cacheFlushIntervalId = undefined\n    if (this.$$cacheFlushInterval) {\n      this.$$cacheFlushIntervalId = setInterval(() => this.removeAll(), this.$$cacheFlushInterval)\n    }\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#setCapacity\n   * @param {number|null} capacity TODO\n   */\n  setCapacity (capacity) {\n    if (capacity === null) {\n      this.$$capacity = null\n    } else if (!utils.isNumber(capacity)) {\n      throw new TypeError(`\"capacity\" must be a number!`)\n    } else if (capacity <= 0) {\n      throw new Error(`\"capacity\" must be greater than zero!`)\n    } else {\n      this.$$capacity = capacity\n    }\n    const removed = {}\n    while (this.$$lruHeap.size() > this.$$capacity) {\n      removed[this.$$lruHeap.peek().key] = this.remove(this.$$lruHeap.peek().key)\n    }\n    return removed\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#setDeleteOnExpire\n   * @param {string|null} deleteOnExpire TODO\n   * @param {boolean} [setRecycleFreq] TODO\n   */\n  setDeleteOnExpire (deleteOnExpire, setRecycleFreq) {\n    if (deleteOnExpire === null) {\n      deleteOnExpire = 'none'\n    } else if (!utils.isString(deleteOnExpire)) {\n      throw new TypeError(`\"deleteOnExpire\" must be a string!`)\n    } else if (deleteOnExpire !== 'none' && deleteOnExpire !== 'passive' && deleteOnExpire !== 'aggressive') {\n      throw new Error(`\"deleteOnExpire\" must be \"none\", \"passive\" or \"aggressive\"!`)\n    }\n    this.$$deleteOnExpire = deleteOnExpire\n    if (setRecycleFreq !== false) {\n      this.setRecycleFreq(this.$$recycleFreq)\n    }\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#setMaxAge\n   * @param {number|null} maxAge TODO\n   */\n  setMaxAge (maxAge) {\n    if (maxAge === null) {\n      this.$$maxAge = Number.MAX_VALUE\n    } else if (!utils.isNumber(maxAge)) {\n      throw new TypeError(`\"maxAge\" must be a number!`)\n    } else if (maxAge <= 0) {\n      throw new Error(`\"maxAge\" must be greater than zero!`)\n    } else {\n      this.$$maxAge = maxAge\n    }\n    const keys = this.keys()\n\n    this.$$expiresHeap.removeAll()\n\n    if (this.$$storage) {\n      keys.forEach((key) => {\n        const itemJson = this.$$storage().getItem(`${this.$$prefix}.data.${key}`)\n        if (itemJson) {\n          const item = utils.fromJson(itemJson)\n          if (this.$$maxAge === Number.MAX_VALUE) {\n            item.expires = Number.MAX_VALUE\n          } else {\n            item.expires = item.created + (item.maxAge || this.$$maxAge)\n          }\n          this.$$expiresHeap.push({\n            key: key,\n            expires: item.expires\n          })\n        }\n      })\n    } else {\n      keys.forEach((key) => {\n        const item = this.$$data[key]\n        if (item) {\n          if (this.$$maxAge === Number.MAX_VALUE) {\n            item.expires = Number.MAX_VALUE\n          } else {\n            item.expires = item.created + (item.maxAge || this.$$maxAge)\n          }\n          this.$$expiresHeap.push(item)\n        }\n      })\n    }\n\n    if (this.$$deleteOnExpire === 'aggressive') {\n      return this.removeExpired()\n    } else {\n      return {}\n    }\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#setOnExpire\n   * @param {function|null} onExpire TODO\n   */\n  setOnExpire (onExpire) {\n    if (onExpire === null) {\n      this.$$onExpire = null\n    } else if (!utils.isFunction(onExpire)) {\n      throw new TypeError(`\"onExpire\" must be a function!`)\n    } else {\n      this.$$onExpire = onExpire\n    }\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#setOptions\n   * @param {object} options TODO\n   * @param {boolean} [strict] TODO\n   */\n  setOptions (options = {}, strict = false) {\n    if (!utils.isObject(options)) {\n      throw new TypeError(`\"options\" must be an object!`)\n    }\n\n    if (options.storagePrefix !== undefined) {\n      this.$$storagePrefix = options.storagePrefix\n    } else if (strict) {\n      this.$$storagePrefix = defaults.storagePrefix\n    }\n\n    this.$$prefix = this.$$storagePrefix + this.$$id\n\n    if (options.enabled !== undefined) {\n      this.$$enabled = !!options.enabled\n    } else if (strict) {\n      this.$$enabled = defaults.enabled\n    }\n\n    if (options.deleteOnExpire !== undefined) {\n      this.setDeleteOnExpire(options.deleteOnExpire, false)\n    } else if (strict) {\n      this.setDeleteOnExpire(defaults.deleteOnExpire, false)\n    }\n\n    if (options.recycleFreq !== undefined) {\n      this.setRecycleFreq(options.recycleFreq)\n    } else if (strict) {\n      this.setRecycleFreq(defaults.recycleFreq)\n    }\n\n    if (options.maxAge !== undefined) {\n      this.setMaxAge(options.maxAge)\n    } else if (strict) {\n      this.setMaxAge(defaults.maxAge)\n    }\n\n    if (options.storeOnResolve !== undefined) {\n      this.$$storeOnResolve = !!options.storeOnResolve\n    } else if (strict) {\n      this.$$storeOnResolve = defaults.storeOnResolve\n    }\n\n    if (options.storeOnReject !== undefined) {\n      this.$$storeOnReject = !!options.storeOnReject\n    } else if (strict) {\n      this.$$storeOnReject = defaults.storeOnReject\n    }\n\n    if (options.capacity !== undefined) {\n      this.setCapacity(options.capacity)\n    } else if (strict) {\n      this.setCapacity(defaults.capacity)\n    }\n\n    if (options.cacheFlushInterval !== undefined) {\n      this.setCacheFlushInterval(options.cacheFlushInterval)\n    } else if (strict) {\n      this.setCacheFlushInterval(defaults.cacheFlushInterval)\n    }\n\n    if (options.onExpire !== undefined) {\n      this.setOnExpire(options.onExpire)\n    } else if (strict) {\n      this.setOnExpire(defaults.onExpire)\n    }\n\n    if (options.storageMode !== undefined || options.storageImpl !== undefined) {\n      this.setStorageMode(options.storageMode || defaults.storageMode, options.storageImpl || defaults.storageImpl)\n    } else if (strict) {\n      this.setStorageMode(defaults.storageMode, defaults.storageImpl)\n    }\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#setRecycleFreq\n   * @param {number|null} recycleFreq TODO\n   */\n  setRecycleFreq (recycleFreq) {\n    if (recycleFreq === null) {\n      this.$$recycleFreq = null\n    } else if (!utils.isNumber(recycleFreq)) {\n      throw new TypeError(`\"recycleFreq\" must be a number!`)\n    } else if (recycleFreq <= 0) {\n      throw new Error(`\"recycleFreq\" must be greater than zero!`)\n    } else {\n      this.$$recycleFreq = recycleFreq\n    }\n    clearInterval(this.$$recycleFreqId)\n    if (this.$$deleteOnExpire === 'aggressive' && this.$$recycleFreq) {\n      this.$$recycleFreqId = setInterval(() => this.removeExpired(), this.$$recycleFreq)\n    } else {\n      this.$$recycleFreqId = undefined\n    }\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#setStorageMode\n   * @param {string} storageMode TODO\n   * @param {object} storageImpl TODO\n   */\n  setStorageMode (storageMode, storageImpl) {\n    if (!utils.isString(storageMode)) {\n      throw new TypeError(`\"storageMode\" must be a string!`)\n    } else if (storageMode !== 'memory' && storageMode !== 'localStorage' && storageMode !== 'sessionStorage') {\n      throw new Error(`\"storageMode\" must be \"memory\", \"localStorage\", or \"sessionStorage\"!`)\n    }\n\n    const prevStorage = this.$$storage\n    const prevData = this.$$data\n    let shouldReInsert = false\n    let items = {}\n\n    const load = (prevStorage, prevData) => {\n      const keys = this.keys()\n      const prevDataIsObject = utils.isObject(prevData)\n      keys.forEach((key) => {\n        if (prevStorage) {\n          const itemJson = prevStorage().getItem(`${this.$$prefix}.data.${key}`)\n          if (itemJson) {\n            items[key] = utils.fromJson(itemJson)\n          }\n        } else if (prevDataIsObject) {\n          items[key] = prevData[key]\n        }\n        this.remove(key)\n        shouldReInsert || (shouldReInsert = true)\n      })\n    }\n\n    if (!this.$$initializing) {\n      load(prevStorage, prevData)\n    }\n\n    this.$$storageMode = storageMode\n\n    if (storageImpl) {\n      if (!utils.isObject(storageImpl)) {\n        throw new TypeError(`\"storageImpl\" must be an object!`)\n      } else if (typeof storageImpl.setItem !== 'function') {\n        throw new Error(`\"storageImpl\" must implement \"setItem(key, value)\"!`)\n      } else if (typeof storageImpl.getItem !== 'function') {\n        throw new Error(`\"storageImpl\" must implement \"getItem(key)\"!`)\n      } else if (typeof storageImpl.removeItem !== 'function') {\n        throw new Error(`\"storageImpl\" must implement \"removeItem(key)\"!`)\n      }\n      this.$$storage = () => storageImpl\n    } else if (this.$$storageMode === 'localStorage') {\n      try {\n        localStorage.setItem('cachefactory', 'cachefactory')\n        localStorage.removeItem('cachefactory')\n        this.$$storage = () => localStorage\n      } catch (e) {\n        this.$$storage = null\n        this.$$storageMode = 'memory'\n      }\n    } else if (this.$$storageMode === 'sessionStorage') {\n      try {\n        sessionStorage.setItem('cachefactory', 'cachefactory')\n        sessionStorage.removeItem('cachefactory')\n        this.$$storage = () => sessionStorage\n      } catch (e) {\n        this.$$storage = null\n        this.$$storageMode = 'memory'\n      }\n    } else {\n      this.$$storage = null\n      this.$$storageMode = 'memory'\n    }\n\n    if (this.$$initializing) {\n      load(this.$$storage, this.$$data)\n    }\n\n    if (shouldReInsert) {\n      Object.keys(items).forEach((key) => {\n        const item = items[key]\n        this.put(key, item.value, {\n          created: item.created,\n          accessed: item.accessed,\n          expires: item.expires\n        })\n      })\n    }\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#touch\n   * @param {string} key TODO\n   * @param {object} [options] TODO\n   */\n  touch (key, options) {\n    if (key) {\n      let val = this.get(key, {\n        onExpire: (k, v) => this.put(k, v)\n      })\n      if (val) {\n        this.put(key, val, options)\n      }\n    } else {\n      let keys = this.keys()\n      for (var i = 0; i < keys.length; i++) {\n        this.touch(keys[i], options)\n      }\n    }\n  }\n\n  /**\n   * TODO\n   *\n   * @method Cache#values\n   * @returns {array} TODO\n   */\n  values () {\n    return this.keys().map((key) => this.get(key))\n  }\n}\n\n/**\n * TODO\n *\n * @class CacheFactory\n */\nexport default class CacheFactory {\n  constructor () {\n    Object.defineProperty(this, 'caches', {\n      writable: true,\n      value: {}\n    })\n  }\n\n  /**\n   * Calls {@link Cache#removeAll} on each {@link Cache} in this\n   * {@link CacheFactory}.\n   *\n   * @method CacheFactory#clearAll\n   */\n  clearAll () {\n    this.keys().forEach((cacheId) => {\n      this.get(cacheId).removeAll()\n    })\n  }\n\n  /**\n   * Create a new {@link Cache}. If a cache with the same `id` had been created\n   * in a previous browser session, then it will attempt to load any data that\n   * had been saved previously.\n   *\n   * @method CacheFactory#createCache\n   * @param {string} id A unique identifier for the new {@link Cache}.\n   * @param {object} [options] Configuration options. See {@link Cache}.\n   * @returns {Cache} The new {@link Cache} instance.\n   */\n  createCache (id, options = {}) {\n    if (this.caches[id]) {\n      throw new Error(`cache \"${id}\" already exists!`)\n    }\n    this.caches[id] = new CacheFactory.Cache(id, options)\n    return this.caches[id]\n  }\n\n  /**\n   * Calls {@link Cache#destroy} on the {@link Cache} in this\n   * {@link CacheFactory} that has the specified `id`.\n   *\n   * @method CacheFactory#destroy\n   * @param {string} id TODO\n   */\n  destroy (id) {\n    this.get(id).destroy()\n    this.caches[id] = undefined\n  }\n\n  /**\n   * Calls {@link Cache#destroy} on each {@link Cache} in this\n   * {@link CacheFactory}.\n   *\n   * @method CacheFactory#destroyAll\n   */\n  destroyAll () {\n    this.keys().forEach((id) => {\n      this.get(id).destroy()\n    })\n    this.caches = {}\n  }\n\n  /**\n   * Calls {@link Cache#disable} on each {@link Cache} in this\n   * {@link CacheFactory}.\n   *\n   * @method CacheFactory#disableAll\n   */\n  disableAll () {\n    this.keys().forEach((cacheId) => {\n      this.get(cacheId).disable()\n    })\n  }\n\n  /**\n   * Calls {@link Cache#enable} on each {@link Cache} in this\n   * {@link CacheFactory}.\n   *\n   * @method CacheFactory#enableAll\n   */\n  enableAll () {\n    this.keys().forEach((cacheId) => {\n      this.get(cacheId).enable()\n    })\n  }\n\n  /**\n   * Returns whether the {@link Cache} with the specified `id` exists in this\n   * {@link CacheFactory}.\n   *\n   * @method CacheFactory#exists\n   * @returns {boolean} Whether the {@link Cache} with the specified `id` exists\n   * in this {@link CacheFactory}.\n   */\n  exists (id) {\n    return !!this.caches[id]\n  }\n\n  /**\n   * Returns a reference to the {@link Cache} in this {@link CacheFactory} that\n   * has the specified `id`.\n   *\n   * @method CacheFactory#get\n   * @param {string} id The `id` of the {@link Cache} to retrieve.\n   * @returns {Cache} The {@link Cache} instance.\n   * @throws {ReferenceError} Throws a `ReferenceError` if the {@link Cache}\n   * does not exist.\n   */\n  get (id) {\n    const cache = this.caches[id]\n    if (!cache) {\n      throw new ReferenceError(`Cache \"${id}\" does not exist!`)\n    }\n    return cache\n  }\n\n  /**\n   * Returns information on this {@link CacheFactory} and its {@link Cache}\n   * instance.\n   *\n   * @method CacheFactory#info\n   * @returns {object} The detailed information.\n   */\n  info () {\n    const keys = this.keys()\n    const info = {\n      size: keys.length,\n      caches: {}\n    }\n    keys.forEach((cacheId) => {\n      info.caches[cacheId] = this.get(cacheId).info()\n    })\n    Object.keys(CacheFactory.defaults).forEach((key, value) => {\n      info[key] = CacheFactory.defaults[key]\n    })\n    return info\n  }\n\n  /**\n   * Returns an array of identifiers of the {@link Cache} instances in this\n   * {@link CacheFactory}.\n   *\n   * @method CacheFactory#keys\n   * @returns {string[]} The {@link Cache} identifiers.\n   */\n  keys () {\n    return Object.keys(this.caches).filter((key) => this.caches[key])\n  }\n\n  /**\n   * Returns an object of key-value pairs representing the identifiers of the\n   * {@link Cache} instances in this {@link CacheFactory}.\n   *\n   * @method CacheFactory#keySet\n   * @returns {object} The {@link Cache} identifiers.\n   */\n  keySet () {\n    const set = {}\n    this.keys().forEach((key) => {\n      set[key] = key\n    })\n    return set\n  }\n\n  /**\n   * Calls {@link Cache#removeExpired} on each {@link Cache} in this\n   * {@link CacheFactory} and returns the removed items, if any.\n   *\n   * @method CacheFactory#removeExpiredFromAll\n   * @returns {object} The removed items, if any.\n   */\n  removeExpiredFromAll () {\n    const expired = {}\n    this.keys().forEach((id) => {\n      expired[id] = this.get(id).removeExpired()\n    })\n    return expired\n  }\n\n  /**\n   * Calls {@link Cache#touch} on each {@link Cache} in this\n   * {@link CacheFactory}.\n   *\n   * @method CacheFactory#touchAll\n   */\n  touchAll () {\n    this.keys().forEach((cacheId) => {\n      this.get(cacheId).touch()\n    })\n  }\n}\n\nCacheFactory.BinaryHeap = BinaryHeap\nCacheFactory.Cache = Cache\nCacheFactory.CacheFactory = CacheFactory\nCacheFactory.defaults = defaults\nCacheFactory.utils = utils\n"],"names":["bubbleUp","heap","weightFunc","n","element","weight","parentN","Math","floor","parent","bubbleDown","length","node","nodeWeight","child2N","child1N","swap","child1","child1Weight","child2","child2Weight","BinaryHeap","compareFunc","x","y","Error","BHProto","prototype","push","peek","pop","front","end","remove","i","removed","removeAll","size","_Promise","window","Promise","e","utils","value","JSON","parse","stringify","a","b","_isPromiseLike","isFunction","then","defaults","Number","MAX_VALUE","assignMsg","Cache","id","options","isString","TypeError","defineProperties","writable","undefined","accessed","equals","$$capacity","$$cacheFlushInterval","$$deleteOnExpire","$$enabled","$$maxAge","$$onExpire","$$recycleFreq","$$storageMode","$$storagePrefix","$$storeOnReject","$$storeOnResolve","setOptions","$$initializing","$$cacheFlushIntervalId","$$recycleFreqId","$$storage","removeItem","$$prefix","$$data","$$lruHeap","$$expiresHeap","$$parent","caches","key","Array","isArray","keys","values","forEach","get","enabled","isObject","onExpire","item","$$promises","itemJson","getItem","fromJson","now","Date","getTime","expires","call","setItem","toJson","created","maxAge","capacity","deleteOnExpire","cacheFlushInterval","recycleFreq","storageMode","keysJson","Object","set","storeOnResolve","storeOnReject","getHandler","store","isError","v","status","data","headers","statusText","put","reject","isNumber","exists","_key","index","indexOf","splice","storage","expired","expiredItem","setInterval","setRecycleFreq","removeExpired","strict","storagePrefix","$$id","setDeleteOnExpire","setMaxAge","setCapacity","setCacheFlushInterval","setOnExpire","storageImpl","setStorageMode","prevStorage","prevData","shouldReInsert","items","load","prevDataIsObject","localStorage","sessionStorage","val","k","touch","map","CacheFactory","defineProperty","cacheId","destroy","disable","enable","cache","ReferenceError","info","filter"],"mappings":"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"}